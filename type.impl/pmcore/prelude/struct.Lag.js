(function() {var type_impls = {
"pmcore":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Lag\" class=\"impl\"><a href=\"#impl-Clone-for-Lag\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"pmcore/prelude/struct.Lag.html\" title=\"struct pmcore::prelude::Lag\">Lag</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pmcore/prelude/struct.Lag.html\" title=\"struct pmcore::prelude::Lag\">Lag</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","pmcore::prelude::Fa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Lag\" class=\"impl\"><a href=\"#impl-Debug-for-Lag\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"pmcore/prelude/struct.Lag.html\" title=\"struct pmcore::prelude::Lag\">Lag</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pmcore::prelude::Fa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lag\" class=\"impl\"><a href=\"#impl-Lag\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"pmcore/prelude/struct.Lag.html\" title=\"struct pmcore::prelude::Lag\">Lag</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"pmcore/prelude/struct.Lag.html#tymethod.new\" class=\"fn\">new</a>(state_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, operation: <a class=\"enum\" href=\"pmcore/prelude/enum.Op.html\" title=\"enum pmcore::prelude::Op\">Op</a>) -&gt; <a class=\"struct\" href=\"pmcore/prelude/struct.Lag.html\" title=\"struct pmcore::prelude::Lag\">Lag</a></h4></section><section id=\"method.apply\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"pmcore/prelude/struct.Lag.html#tymethod.apply\" class=\"fn\">apply</a>(\n    &amp;self,\n    lag: &amp;mut <a class=\"struct\" href=\"pmcore/struct.HashMap.html\" title=\"struct pmcore::HashMap\">HashMap</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>&gt;,\n    p: &amp;<a class=\"struct\" href=\"https://docs.rs/nalgebra/0.25.0/nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"https://docs.rs/nalgebra/0.25.0/nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, <a class=\"struct\" href=\"https://docs.rs/nalgebra/0.25.0/nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"https://docs.rs/nalgebra/0.25.0/nalgebra/base/vec_storage/struct.VecStorage.html\" title=\"struct nalgebra::base::vec_storage::VecStorage\">VecStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>, <a class=\"struct\" href=\"https://docs.rs/nalgebra/0.25.0/nalgebra/base/dimension/struct.Dyn.html\" title=\"struct nalgebra::base::dimension::Dyn\">Dyn</a>, <a class=\"struct\" href=\"https://docs.rs/nalgebra/0.25.0/nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;,\n)</h4></section></div></details>",0,"pmcore::prelude::Fa"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()