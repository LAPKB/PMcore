var searchIndex = new Map(JSON.parse('[\
["pmcore",{"doc":"PMcore is a framework for developing and running …","t":"IFFPFIPIFIKIIIIIINCNNNNNNNNCNNNNNNNCOOOOOOOOONNNNNNNNNNCCCNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNCNNNNNNCCNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNKMHMFNNNNNNNNNNNNNNNNNNNNNNNFPGPGPFPPKONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOFHHHHHPFPIEEEEEEEEEFCCCCCCCCCCHFFFFFFOOOOOONOOONNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNONNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNONNNNNNNNNNNNNNNNNNNNOOOOHNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCHHHHHPFGPKNNNNONNNNNNNNONNNNNNNONNNNNNNNMNNNNNNNNNNNNNNNNNNCHHCHCCFNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNHNNNNNOOOOHHHONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNFFFFFFFNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNOOOOOOOONHONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNHCFFRKRMMMNNNNNNNNNNNNNNNNNNNNNNMNHNNMMNNNNNNNHNHHMNNNNNNNNNNNNNNNNNNFGPPCNNNNNCNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNCNNNNNNNNNNNNNNNCNNGFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHPGNNNNNCNNNNNNNNCNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNONNNNNNNNNNNNNNNNNNNNNNGPPPPPNNNNHNNNNNHNNNHNNNNNNNN","n":["DVector","Dop853","Dopri5","Err","HashMap","OVector","Ok","Result","Rk4","SVector","System","Vector1","Vector2","Vector3","Vector4","Vector5","Vector6","accumulate","algorithms","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","butcher_tableau","capacity","clear","clear","clone","clone_from","clone_into","contains_key","controller","data","data","data","data","data","data","data","data","data","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dop853","dop_shared","dopri5","drain","drop","drop","drop","drop","entry","entrypoints","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend_one","extend_one","extend_reserve","extend_reserve","extract_if","fmt","from","from","from","from","from","from_iter","from_par_iter","from_param","from_param","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get","get_key_value","get_many_mut","get_many_unchecked_mut","get_mut","hasher","index","init","init","init","init","initial","insert","integrate","integrate","integrate","into","into","into","into","into_deserializer","into_iter","into_iter","into_iter","into_keys","into_par_iter","into_par_iter","into_par_iter","into_values","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter_mut","keys","len","logger","new","new","new","new","par_drain","par_extend","par_extend","par_iter","par_iter_mut","prelude","raw_entry","raw_entry_mut","remove","remove_entry","reserve","retain","rk4","routines","serialize","shrink_to","shrink_to_fit","solout","system","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_reserve","tui","type_id","type_id","type_id","type_id","values","values_mut","vzip","vzip","vzip","vzip","with_capacity","with_capacity_and_hasher","with_hasher","x_out","x_out","x_out","y_out","y_out","y_out","Algorithm","fit","initialize_algorithm","to_npresult","Controller","accept","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","from_subset","h_max","init","into","is_in_subset","is_in_subset","new","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_into","type_id","vzip","Dop853","Dense","IntegrationError","MaxNumStepReached","OutputType","Sparse","Stats","StepSizeUnderflow","StiffnessDetected","System","accepted_steps","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","num_eval","print","rejected_steps","solout","system","to_compact_string","to_compact_string","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","n_step","x","x","x","Dopri5","simulate","start","start_internal","setup_log","trace_memory","Err","HashMap","Ok","Result","algorithms","condensation","logger","optimization","prob","sigma","simulate","start","start_internal","Rk4","condensation","datafile","evaluation","expansion","initialization","optimization","output","settings","simulation","prune","prune","Block","CovLine","Dose","Event","Infusion","Scenario","_addl","_c0","_c1","_c2","_c3","_ii","add_event_interval","amount","amount","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp_by_id_then_time","compartment","compartment","covs","covs","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dose","drop","drop","drop","drop","drop","drop","dur","dur","events","evid","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","id","init","init","init","init","init","init","input","interp","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","obs","obs_times","out","outeq","parse","reorder_with_lag","time","time","time","times","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","ipm","ipm_faer","prob","qr","sigma","burke","burke","calculate_psi","normal_likelihood","calculate_r","Add","ErrorPoly","ErrorType","Prop","Sigma","borrow","borrow","borrow_mut","borrow_mut","c","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","e_type","fmt","from","from","from_subset","from_subset","from_subset","from_subset","gl","init","init","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","sigma","sigma","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","adaptative_grid","adaptative_grid","sample_space","sobol","generate","d_optimizer","optim","SppOptimizer","borrow","borrow_mut","cost","deref","deref_mut","drop","from","from_subset","from_subset","init","into","is_in_subset","is_in_subset","new","optimize_point","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_into","type_id","vzip","CycleLog","CycleWriter","MetaWriter","NPCycle","NPResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","converged","cycle","cycles","cycles","default","delta_objf","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gamlam","init","init","init","init","init","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","median","new","new","new","new","new","nspp","objf","objf","par_names","population_mean_median","posterior","posterior_mean_median","psi","push_and_write","scenarios","settings","theta","theta","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","w","write","write","write_meta","write_obs","write_outputs","write_posterior","write_pred","write_theta","Config","Constant","Error","Fixed","Paths","Random","Settings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","class","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","constant","cycles","data","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","engine","error","exclude","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get","idelta","init","init","init","init","init","init","init","init_points","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","log","log_level","names","names_and_ranges","output","parameters","parameters","parameters","paths","poly","prior","random","ranges","read_settings","seed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tad","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tui","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_settings_to_file","predict","Engine","Model","Model","Predict","State","add_covs","add_dose","add_infusion","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_subset","from_subset","from_subset","from_subset","get_output","get_param","get_ypred","init","init","initial_state","initial_system","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","post_predictions","pred","sim_obs","simple_sim","state_step","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","App","AppReturn","Continue","Exit","actions","actions","borrow","borrow","borrow_mut","borrow_mut","components","deref","deref","deref_mut","deref_mut","do_action","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_subset","from_subset","from_subset","from_subset","init","init","inputs","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","state","state","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ui","vzip","vzip","Action","Actions","Next","Quit","Stop","actions","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","find","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iterator","keys","to_compact_string","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","draw_commands","draw_logs","draw_options","draw_plot","draw_status","draw_tabs","draw_title","Input","InputEvent","borrow","borrow_mut","deref","deref_mut","drop","events","fmt","from","from_subset","from_subset","init","into","is_in_subset","is_in_subset","key","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_into","type_id","vzip","Events","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","from_subset","init","into","is_in_subset","is_in_subset","new","recv","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_into","type_id","vzip","Alt","Backspace","Char","Ctrl","Delete","Down","End","Enter","Esc","F0","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","Home","Ins","Key","Left","PageDown","PageUp","Right","Tab","Unknown","Up","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_f","from_subset","from_subset","hash","init","into","is_exit","is_in_subset","is_in_subset","is_stop","to_compact_string","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_into","type_id","vzip","CycleHistory","add_cycle","borrow","borrow_mut","clone","clone_into","cycles","default","deref","deref_mut","drop","fmt","from","from_subset","from_subset","init","into","is_in_subset","is_in_subset","new","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_into","type_id","vzip","Comm","LogMessage","Message","NPCycle","Stop","StopUI","borrow","borrow_mut","deref","deref_mut","draw","drop","from","from_subset","from_subset","init","initialize_panic_handler","into","is_in_subset","is_in_subset","start_ui","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"pmcore"],[209,"pmcore::algorithms"],[213,"pmcore::controller"],[237,"pmcore::dop853"],[238,"pmcore::dop_shared"],[330,"pmcore::dop_shared::IntegrationError"],[334,"pmcore::dopri5"],[335,"pmcore::entrypoints"],[338,"pmcore::logger"],[340,"pmcore::prelude"],[353,"pmcore::rk4"],[354,"pmcore::routines"],[363,"pmcore::routines::condensation"],[364,"pmcore::routines::condensation::prune"],[365,"pmcore::routines::datafile"],[550,"pmcore::routines::evaluation"],[555,"pmcore::routines::evaluation::ipm"],[556,"pmcore::routines::evaluation::ipm_faer"],[557,"pmcore::routines::evaluation::prob"],[559,"pmcore::routines::evaluation::qr"],[560,"pmcore::routines::evaluation::sigma"],[614,"pmcore::routines::expansion"],[615,"pmcore::routines::expansion::adaptative_grid"],[616,"pmcore::routines::initialization"],[618,"pmcore::routines::initialization::sobol"],[619,"pmcore::routines::optimization"],[621,"pmcore::routines::optimization::d_optimizer"],[645,"pmcore::routines::output"],[794,"pmcore::routines::settings"],[1017,"pmcore::routines::simulation"],[1018,"pmcore::routines::simulation::predict"],[1085,"pmcore::tui"],[1145,"pmcore::tui::actions"],[1213,"pmcore::tui::components"],[1220,"pmcore::tui::inputs"],[1245,"pmcore::tui::inputs::events"],[1268,"pmcore::tui::inputs::key"],[1338,"pmcore::tui::state"],[1367,"pmcore::tui::ui"],[1396,"core::cmp"],[1397,"core::hash"],[1398,"core::hash"],[1399,"core::clone"],[1400,"core::marker"],[1401,"core::borrow"],[1402,"core::result"],[1403,"serde::de"],[1404,"serde::de"],[1405,"std::collections::hash::map"],[1406,"core::marker"],[1407,"core::fmt"],[1408,"core::fmt"],[1409,"nalgebra::base::dimension"],[1410,"nalgebra::base::matrix"],[1411,"simba::scalar::subset"],[1412,"nalgebra::base::scalar"],[1413,"simba::scalar::field"],[1414,"simba::scalar::field"],[1415,"nalgebra::base::dimension"],[1416,"serde::de"],[1417,"serde::ser"],[1418,"core::any"],[1419,"std::collections::hash::map"],[1420,"tokio::sync::mpsc::unbounded"],[1421,"alloc::boxed"],[1422,"compact_str"],[1423,"alloc::string"],[1424,"ndarray::aliases"],[1425,"ndarray::aliases"],[1426,"ndarray::data_repr"],[1427,"ndarray::dimension::dim"],[1428,"ndarray"],[1429,"anyhow"],[1430,"config::error"],[1431,"std::io::error"],[1432,"core::slice::iter"],[1433,"ratatui::widgets::table::table"],[1434,"ratatui::widgets::paragraph"],[1435,"ratatui::widgets::chart"],[1436,"core::time"],[1437,"ratatui::widgets::tabs"],[1438,"crossterm::event"],[1439,"core::hash"],[1440,"tokio::sync::mpsc::unbounded"]],"d":["A dynamically sized column vector.","Structure containing the parameters for the numerical …","Structure containing the parameters for the numerical …","Contains the error value","A hash map implemented with quadratic probing and SIMD …","An owned D-dimensional column vector.","Contains the success value","type alias for <code>Result&lt;T, Report&gt;</code>","Structure containing the parameters for the numerical …","A statically sized D-dimensional column vector.","Trait needed to be implemented by the user.","A stack-allocated, 1-dimensional column vector.","A stack-allocated, 2-dimensional column vector.","A stack-allocated, 3-dimensional column vector.","A stack-allocated, 4-dimensional column vector.","A stack-allocated, 5-dimensional column vector.","A stack-allocated, 6-dimensional column vector.","","Provides the various algorithms used within the framework","","","","","","","","","Butcher tableaux containing the coefficients of the …","Returns the number of elements the map can hold without …","","Clears the map, removing all key-value pairs. Keeps the …","","","","Returns <code>true</code> if the map contains a value for the specified …","Adaptive step size control.","The data storage that contains all the matrix components. …","The data storage that contains all the matrix components. …","The data storage that contains all the matrix components. …","The data storage that contains all the matrix components. …","The data storage that contains all the matrix components. …","The data storage that contains all the matrix components. …","The data storage that contains all the matrix components. …","The data storage that contains all the matrix components. …","The data storage that contains all the matrix components. …","Creates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value …","","","","","","","","","","Explicit Runge-Kutta method with Dormand-Prince …","Shared traits and structures for dopri5 and dop853.","Explicit Runge-Kutta method with Dormand-Prince …","Clears the map, returning all key-value pairs as an …","","","","","Gets the given key’s corresponding entry in the map for …","Entry points for external use of the framework.","","","","","","","","","","","","","Creates an iterator which uses a closure to determine if …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","Returns the argument unchanged.","","","Advanced initializer for the structure.","Advanced initializer for the structure.","","","","","","","","","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","","","","","","Inserts a key-value pair into the map.","Core integration method.","Core integration method.","Core integration method.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a consuming iterator, that is, one that moves each …","Creates a consuming iterator visiting all the keys in …","","","","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","","","","","","","","","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","Logger functionality for the framework using tracing","Default initializer for the structure.","Default initializer for the structure","Default initializer for the structure","Creates an empty <code>HashMap</code>.","","","","","","A collection of commonly used items to simplify imports.","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Removes a key from the map, returning the value at the key …","Removes a key from the map, returning the stored key and …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Explicit Runge-Kutta method of order 4 with fixed step …","Routines for the crate","","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","Stop function called at every successful integration step. …","System of ordinary differential equations.","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","Tries to reserve capacity for at least <code>additional</code> more …","Terminal-based user interface components.","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","","","","","Creates an empty <code>HashMap</code> with at least the specified …","Creates an empty <code>HashMap</code> with at least the specified …","Creates an empty <code>HashMap</code> which will use the given hash …","Getter for the independent variable’s output.","Getter for the independent variable’s output.","Getter for the independent variable’s output.","Getter for the dependent variables’ output.","Getter for the dependent variables’ output.","Getter for the dependent variables’ output.","","","","","Used for adaptive step size control","Determines if the step must be accepted or rejected and …","","","","","","Returns the argument unchanged.","","","Returns the maximum step size allowed.","","Calls <code>U::from(self)</code>.","","","Creates a controller responsible for adaptive step size …","","","","","","","","","Structure containing the parameters for the numerical …","","Enumeration of the errors that may arise during …","","Enumeration of the types of the integration output.","","Contains some statistics of the integration.","","","Trait needed to be implemented by the user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Prints some statistics related to the integration process.","","Stop function called at every successful integration step. …","System of ordinary differential equations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure containing the parameters for the numerical …","Simulate predictions from a model and prior distribution","Primary entrypoint for PMcore","Alternative entrypoint, primarily meant for third-party …","Setup logging for the library","","Contains the error value","A hash map implemented with quadratic probing and SIMD …","Contains the success value","type alias for <code>Result&lt;T, Report&gt;</code>","","","","","","","","","","Structure containing the parameters for the numerical …","Routines for condensing grids","Handles datafile operations","","Routines for expanding grids","Routines for initializing the grid","","Routines for writing results to file, such as predicted …","Provides routines for reading and parsing settings","","","","","","","A Event represent a single row in the Datafile","","A Scenario is a collection of blocks that represent a …","","","","","","","Adds “mock” events to a Scenario in order to generate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interior point method for solving the optimization problem","","","","","Apply the Burke’s Interior Point Method (IPM) to solve a …","","Calculate the Ψ (psi) matrix, which contains the …","Calculate the normal likelihood","","","ErrorPoly contains the information on uncertainties in …","ErrorType defines the current error model","","Contains information on the observation error","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Estimates the standard deviation of the observation error …","","","","","","","","","","","","","","","","","","","","Adaptive grid algorithm for support point expansion","","","Generates a 2-dimensional array containing a Sobol …","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Defines the result objects from a run An NPResult contains …","Defines the result objects from an NPAG run An NPResult …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Create a new NPResult object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write the observations, which is the reformatted input data","","Writes the posterior support points for each individual","Writes the predictions","Writes theta, which containts the population support …","General configuration settings","Parameters which are held constant","Defines the error model and polynomial to be used","Parameters which are estimated, but fixed for the …","This struct contains the paths to the data, log and prior …","Random parameters to be estimated","Contains all settings for PMcore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","General configuration settings","Parameters which are held constant","Maximum number of cycles","Path to the data file, see <code>datafile::parse</code> for details.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Denotes the algorithm to use, <code>NPAG</code> is the only supported …","Defines the error model and polynomial to be used","","Parameters which are estimated, but fixed for the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Get the upper and lower bounds of a random parameter from …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","If provided, the log file will be written to this path.","","Returns a vector of the names of the random parameters","Returns a vector of tuples containing the names and ranges …","","","","","Paths to the data, log and prior files","","If provided, PMcore will use this prior instead of a “…","Random parameters to be estimated","Returns a vector of the upper and lower bounds of the …","Parses the settings from a TOML configuration file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate the boundaries of the random parameters","","","","","","","","","","Writes a copy of the parsed settings to file","","","","","return the predicted values for the given scenario and …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Simulate observations for multiple scenarios and support …","","","","","","","","","","","","","","","","","","","","","The main application, containing the state","","","","","","","","","","","","","","","Handle a user action","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Defines the Terminal User Interface (TUI) for PMcore","","","We define all available action","The application should have some contextual actions.","","","","Get contextual actions. (just for building a help view)","","","","","","","","","","","","","","","","","","","","","","Given a key, find the corresponding action","","","","Returns the argument unchanged.","Returns the argument unchanged.","Build contextual action","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","All available actions","List of key associated to action","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A small event handler that wrap crossterm input and tick …","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Constructs an new instance of <code>Events</code> with the default …","","","","","","","","","","","Backspace key","","","Delete key","Down arrow","End key","Both Enter (or Return) and numpad Enter","Escape key","F0 key","F1 key","F10 key","F11 key","F12 key","F2 key","F3 key","F4 key","F5 key","F6 key","F7 key","F8 key","F9 key","Home key","Insert key","Represents an key.","Left arrow","Page Down key","Page Up key","Right arrow","Tabulation key","","Up arrow","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the function key corresponding to the given number","","","","","Calls <code>U::from(self)</code>.","If exit","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,81,0,0,81,0,0,0,0,0,0,0,0,0,0,1,0,35,44,49,1,35,44,49,1,0,1,1,1,1,1,1,1,0,137,138,139,140,141,142,143,144,145,1,35,44,49,1,35,44,49,1,1,0,0,0,1,35,44,49,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,35,44,49,1,1,1,1,35,44,35,35,44,44,49,49,1,1,1,1,1,1,1,1,1,35,44,49,1,1,1,35,44,49,35,44,49,1,1,1,1,1,1,1,1,1,1,1,35,35,44,44,49,49,1,1,1,1,1,1,0,35,44,49,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,43,43,1,35,35,44,44,49,49,1,1,35,35,44,44,49,49,1,1,35,44,49,1,1,35,44,49,1,1,0,35,44,49,1,1,1,35,44,49,1,1,1,1,35,44,49,35,44,49,0,69,0,69,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,34,0,48,0,34,0,48,48,0,47,34,48,47,34,48,47,47,47,34,48,47,34,48,47,34,48,47,34,34,34,34,34,34,48,48,47,47,34,48,47,34,34,48,48,47,47,34,48,47,34,48,47,34,34,48,48,47,47,47,47,47,43,43,48,47,47,48,47,34,34,48,48,47,47,34,34,48,48,47,47,34,48,47,34,48,47,34,48,47,34,48,47,146,146,147,148,0,0,0,0,0,0,81,0,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,90,90,90,90,73,86,87,73,73,86,87,88,89,90,73,86,87,88,89,90,73,86,87,88,89,90,73,86,87,88,89,90,90,86,87,89,90,73,86,87,88,89,90,73,86,87,88,89,90,90,73,86,87,88,89,90,86,90,89,90,73,86,87,88,89,90,73,86,87,88,89,90,73,73,86,86,87,87,88,88,89,89,90,90,73,90,73,86,87,88,89,90,90,88,73,86,87,88,89,90,73,73,86,86,87,87,88,88,89,89,90,90,73,73,73,90,90,0,73,86,87,90,73,73,86,87,88,89,90,73,73,86,86,87,87,88,88,89,89,90,90,73,73,86,86,87,87,88,88,89,89,90,90,73,86,87,88,89,90,73,86,87,88,89,90,73,86,87,88,89,90,73,86,87,88,89,90,0,0,0,0,0,0,0,0,0,0,98,0,0,98,0,99,98,99,98,99,98,98,99,98,99,98,99,98,99,98,99,98,99,99,98,98,99,99,98,99,98,99,99,98,98,97,99,98,99,99,98,98,99,99,98,98,99,98,99,98,99,98,99,98,0,0,0,0,0,0,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,0,0,0,0,70,104,102,103,105,70,104,102,103,105,102,102,70,102,70,104,102,102,70,104,102,103,105,70,104,102,103,105,70,104,102,103,105,103,70,104,102,103,105,70,104,102,103,105,70,70,104,104,102,102,103,103,105,105,102,70,104,102,103,105,70,104,102,103,105,70,70,104,104,102,102,103,103,105,105,0,70,104,102,103,105,102,70,102,70,0,0,0,70,104,70,70,70,102,102,70,70,104,104,102,102,103,103,105,105,70,70,104,104,102,102,103,103,105,105,70,104,102,103,105,70,104,102,103,105,70,104,102,103,105,70,104,102,103,105,70,103,105,70,70,70,70,70,70,0,0,0,0,0,0,0,72,106,107,108,109,110,111,72,106,107,108,109,110,111,107,111,72,106,107,108,109,110,111,72,106,107,108,109,110,111,72,72,107,106,72,106,107,108,109,110,111,72,106,107,108,109,110,111,72,106,107,108,109,110,111,72,106,107,108,109,110,111,107,72,107,72,72,106,107,108,109,110,111,72,106,107,108,109,110,111,72,72,106,106,107,107,108,108,109,109,110,110,111,111,108,107,72,106,107,108,109,110,111,107,72,106,107,108,109,110,111,72,72,106,106,107,107,108,108,109,109,110,110,111,111,106,107,108,108,107,108,109,110,72,111,106,72,108,0,107,72,106,107,108,109,110,111,107,72,106,107,108,109,110,111,72,72,106,106,107,107,108,108,109,109,110,110,111,111,72,72,106,106,107,107,108,108,109,109,110,110,111,111,72,106,107,108,109,110,111,72,106,107,108,109,110,111,107,72,106,107,108,109,110,111,108,111,111,72,106,107,108,109,110,111,0,0,0,0,77,0,77,77,77,77,116,71,116,71,116,71,116,71,116,71,116,71,116,71,116,71,116,71,116,116,71,71,77,116,0,116,71,77,77,116,71,116,116,71,71,71,0,71,0,0,77,116,71,116,116,71,71,116,116,71,71,116,71,116,71,116,71,116,71,0,0,120,120,0,117,117,120,117,120,0,117,120,117,120,117,117,120,120,120,120,120,120,120,120,117,120,117,117,120,120,117,120,0,117,120,117,117,120,120,117,0,117,117,117,120,120,117,117,120,120,117,120,117,120,117,120,0,117,120,0,0,121,121,121,118,121,118,121,118,121,118,121,118,118,121,118,121,118,121,118,121,121,121,121,121,121,118,121,121,118,121,118,118,121,121,118,118,121,118,121,118,121,121,118,118,121,121,121,121,118,121,121,121,118,118,121,121,118,118,121,118,121,118,121,118,121,118,0,0,0,0,0,0,0,129,0,129,129,129,129,129,0,129,129,129,129,129,129,129,129,0,129,129,129,129,129,129,129,129,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,0,74,74,74,74,74,74,74,74,74,0,74,74,74,74,74,0,74,74,74,0,74,74,74,74,74,74,74,74],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1,-2,-3]],[2,[-1,-2]]],2,[3,4],[],[5,6]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[1,[-1,-2,-3]]],7,[],[],[]],[[[1,[-1,-2,-3]]],2,[4,3],[],5],[[[1,[-1,-2,-3]]],2,[],[],[]],[[[1,[-1,-2,-3]]],[[1,[-1,-2,-3]]],8,8,8],[[[1,[-1,-2,-3]],[1,[-1,-2,-3]]],2,8,8,8],[[-1,-2],2,[],[]],[[[1,[-2,-3,-4]],-1],9,[4,3,10],[[11,[-1]],3,4],[],5],0,0,0,0,0,0,0,0,0,0,[[],[[1,[-1,-2,-3]]],[],[],6],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[12,[[1,[-2,-3,-4]]]]],13,[14,3,4],14,[5,6]],0,0,0,[[[1,[-1,-2,-3]]],[[15,[-1,-2]]],[],[],[]],[7,2],[7,2],[7,2],[7,2],[[[1,[-1,-2,-3]],-1],[[16,[-1,-2]]],[3,4],[],5],0,[[[1,[-1,-2,-3]],[1,[-1,-2,-3]]],9,[3,4],17,5],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[[1,[-1,-2,-3]],-4],2,[3,4],[],5,[[19,[],[[18,[[2,[-1,-2]]]]]]]],[[[1,[-1,-2,-3]],-4],2,[3,4,20],20,5,[[19,[],[[18,[[2,[-1,-2]]]]]]]],[[[1,[-1,-2,-3]],[2,[-1,-2]]],2,[3,4],[],5],[[[1,[-1,-2,-3]],[2,[-1,-2]]],2,[3,4,20],20,5],[[[1,[-1,-2,-3]],7],2,[3,4],[],5],[[[1,[-1,-2,-3]],7],2,[3,4,20],20,5],[[[1,[-1,-2,-3]],-4],[[21,[-1,-2,-4]]],[],[],[],[[23,[-1,-2],[[22,[9]]]]]],[[[1,[-1,-2,-3]],24],[[12,[2,25]]],26,26,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[27,[[2,[-1,-2]]]]],[[1,[-1,-2]]],[3,4],[]],[-1,-1,[]],[-3,[[1,[-1,-2,-4]]],[3,4],[],[[19,[],[[18,[[2,[-1,-2]]]]]]],[5,6]],[-3,[[1,[-1,-2,-4]]],[3,4,28],28,[[29,[],[[18,[[2,[-1,-2]]]]]]],[5,6,28]],[[-3,30,30,30,[32,[-1,-2,31]],30,30,30,30,30,30,30,30,33,33,34],[[35,[[32,[-1,-2,31]],-3]]],[20,[36,[30]],37,38,39,40,41],42,[[43,[[32,[-1,-2,31]]]]]],[[-3,30,30,30,[32,[-1,-2,31]],30,30,30,30,30,30,30,30,33,33,34],[[44,[[32,[-1,-2,31]],-3]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-2,-3,-4]],-1],[[46,[-3]]],[4,3,10],[[11,[-1]],3,4],[],5],[[[1,[-2,-3,-4]],-1],[[46,[[2,[-2,-3]]]]],[4,3,10],[[11,[-1]],3,4],[],5],[[[1,[-2,-3,-4]],[27,[-1]]],[[46,[[27,[-3]]]]],[4,3,10],[[11,[-1]],3,4],[],5],[[[1,[-2,-3,-4]],[27,[-1]]],[[46,[[27,[-3]]]]],[4,3,10],[[11,[-1]],3,4],[],5],[[[1,[-2,-3,-4]],-1],[[46,[-3]]],[4,3,10],[[11,[-1]],3,4],[],5],[[[1,[-1,-2,-3]]],-3,[],[],[]],[[[1,[-2,-3,-4]],-1],-3,[3,4,10],[3,4,[11,[-1]]],[],5],[[],7],[[],7],[[],7],[[],7],[[[46,[7]]],[[1,[-1,-2,-3]]],[3,4],[],[5,6]],[[[1,[-1,-2,-3]],-1,-2],[[46,[-2]]],[3,4],[],5],[[[35,[[32,[-1,-2,31]],-3]]],[[12,[47,48]]],[20,[36,[30]],37,38,39,40,41],42,[[43,[[32,[-1,-2,31]]]]]],[[[44,[[32,[-1,-2,31]],-3]]],[[12,[47,48]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],[[[49,[[32,[-1,-2,31]],-3]]],[[12,[47,48]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-2,-3,-4]]],[],50,[[51,[-1]],3,4],[[51,[-1]]],5],[[[1,[-1,-2,-3]]],[[52,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],[[53,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],[[54,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],[[55,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],[],[4,3,56],28,5],[[[1,[-1,-2,-3]]],[],[4,3,28],28,5],[[[1,[-1,-2,-3]]],[],[4,3,56],56,5],[[[1,[-1,-2,-3]]],[[57,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],9,[],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[1,[-1,-2,-3]]],[[52,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],[[53,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],[[58,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],7,[],[],[]],0,[[-3,30,30,30,[32,[-1,-2,31]],30,30],[[35,[[32,[-1,-2,31]],-3]]],[20,[36,[30]],37,38,39,40,41],42,[[43,[[32,[-1,-2,31]]]]]],[[-3,30,30,30,[32,[-1,-2,31]],30,30],[[44,[[32,[-1,-2,31]],-3]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],[[-3,30,[32,[-1,-2,31]],30,30],[[49,[[32,[-1,-2,31]],-3]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],[[],[[1,[-1,-2]]],[],[]],[[[1,[-1,-2,-3]]],[],[4,3,28],28,5],[[[1,[-1,-2,-3]],-4],2,[3,4,28],28,[5,28],[[29,[],[[18,[[2,[-1,-2]]]]]]]],[[[1,[-1,-2,-3]],-4],2,[20,3,4,28,56],[20,28,56],[5,28],[[29,[],[[18,[[2,[-1,-2]]]]]]]],[-1,[],[]],[-1,[],[]],0,[[[1,[-1,-2,-3]]],[[59,[-1,-2,-3]]],[],[],5],[[[1,[-1,-2,-3]]],[[60,[-1,-2,-3]]],[],[],5],[[[1,[-2,-3,-4]],-1],[[46,[-3]]],[4,3,10],[[11,[-1]],3,4],[],5],[[[1,[-2,-3,-4]],-1],[[46,[[2,[-2,-3]]]]],[4,3,10],[[11,[-1]],3,4],[],5],[[[1,[-1,-2,-3]],7],2,[3,4],[],5],[[[1,[-1,-2,-3]],-4],2,[],[],[],[[23,[-1,-2],[[22,[9]]]]]],0,0,[[[1,[-1,-2,-3]],-4],12,61,61,[],62],[[[1,[-1,-2,-3]],7],2,[3,4],[],5],[[[1,[-1,-2,-3]]],2,[3,4],[],5],[[43,30,-1,-1],9,[]],[[43,30,-1,-1],2,[]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[1,[-1,-2,-3]],-1,-2],[[12,[-2,[63,[-1,-2]]]]],[3,4],[],5],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[1,[-1,-2,-3]],7],[[12,[2,64]]],[3,4],[],5],0,[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[[[1,[-1,-2,-3]]],[[66,[-1,-2]]],[],[],[]],[[[1,[-1,-2,-3]]],[[67,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,[[1,[-1,-2]]],[],[]],[[7,-1],[[1,[-2,-3,-1]]],[],[],[]],[-1,[[1,[-2,-3,-1]]],[],[],[]],[[[35,[[32,[-1,-2,31]],-3]]],[[68,[30]]],[20,[36,[30]],37,38,39,40,41],42,[[43,[[32,[-1,-2,31]]]]]],[[[44,[[32,[-1,-2,31]],-3]]],[[68,[30]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],[[[49,[[32,[-1,-2,31]],-3]]],[[68,[30]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],[[[35,[[32,[-1,-2,31]],-3]]],[[68,[[32,[-1,-2,31]]]]],[20,[36,[30]],37,38,39,40,41],42,[[43,[[32,[-1,-2,31]]]]]],[[[44,[[32,[-1,-2,31]],-3]]],[[68,[[32,[-1,-2,31]]]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],[[[49,[[32,[-1,-2,31]],-3]]],[[68,[[32,[-1,-2,31]]]]],[20,[36,[30]],37,38,39,40,45,41],42,[[43,[[32,[-1,-2,31]]]]]],0,[69,70],[[[71,[-1]],72,[68,[73]],[75,[74]]],[[76,[69]]],[77,56,8]],[69,70],0,[[78,30,30,30],9],[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[78,30],[[],7],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[[30,30,30,30,30,30,30],78],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[[-1,-2],2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[7,2],[[34,34],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[48,24],[[12,[2,25]]]],[[48,24],[[12,[2,25]]]],[[47,24],[[12,[2,25]]]],[[47,24],[[12,[2,25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[47,2],0,[[43,30,-1,-1],9,[]],[[43,30,-1,-1],2,[]],[-1,79,[]],[-1,79,[]],[-1,-2,[],[]],[-1,80,[]],[-1,80,[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[[71,[-1]],80],[[81,[2]]],[77,56,28,8]],[[[71,[-1]],80],[[81,[70]]],[77,56,28,8]],[[[71,[-1]],72,[68,[73]]],[[81,[70]]],[77,56,28,8]],[[72,[75,[74]]],2],[82,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[83,[30]],[84,[30]],[85,[[2,[30,30]]]],30],2],0,0,0,0,0,0,0,0,0,0,0,0,[[73,30,30],73],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,73],[86,86],[87,87],[88,88],[89,89],[90,90],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[90,90],91],0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],0,[7,2],[7,2],[7,2],[7,2],[7,2],[7,2],0,0,0,0,[[73,24],92],[[86,24],92],[[87,24],92],[[88,24],92],[[89,24],92],[[90,24],92],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[88,30],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[68,[90]]],[[12,[73,[76,[93]]]]]],0,0,0,0,[80,[[12,[[68,[73]],[76,[93]]]]]],[[73,[68,[[2,[30,7]]]]],73],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[[96,[[94,[30]],[95,[[27,[7]]]]]]],[[12,[[2,[[96,[[94,[30]],[95,[[27,[7]]]]]],30]],[76,[93]]]]]],[[[96,[[94,[30]],[95,[[27,[7]]]]]]],[[12,[[2,[[96,[[94,[30]],[95,[[27,[7]]]]]],30]],[76,[93]]]]]],[[[83,[[84,[30]]]],[68,[73]],-1],[[83,[30]]],[97,56]],[[[84,[30]],[84,[30]],[84,[30]]],30],[[[83,[30]]],[[2,[[83,[30]],[68,[7]]]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[98,98],[[-1,-2],2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],0,[[98,24],92],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[97,[84,[30]]],[[84,[30]]]],[[99,[84,[30]]],[[84,[30]]]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[83,[30]],30,[85,[[2,[30,30]]]],30],[[83,[30]]]],[[72,[68,[[2,[30,30]]]]],[[83,[30]]]],0,[[7,[68,[[2,[30,30]]]],7],[[96,[[94,[30]],[95,[[27,[7]]]]]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[100,[-1,-2]],-3],[[12,[-4,101]]],[97,56],[77,56,8],[],[]],[7,-1,[]],[7,-1,[]],[7,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[[[71,[-1]],[68,[73]],-2,[84,[30]]],[[100,[-2,-1]]],[77,56,8],[97,56]],[[[100,[-1,-2]],[84,[30]]],[[12,[[84,[30]],101]]],[97,56],[77,56,8]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[102,102],[[-1,-2],2,[],[]],0,0,0,0,[[],102],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[7,2],[7,2],[7,2],[103,2],[[70,24],92],[[104,24],92],[[102,24],92],[[103,24],92],[[105,24],92],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[68,[30]]],30],[[[68,[73]],[83,[30]],[83,[30]],[84,[30]],30,7,9,72],70],[[[85,[80]]],104],[[],102],[[82,[68,[80]]],103],[[],105],0,0,0,0,[[[83,[30]],[84,[30]]],[[2,[[84,[30]],[84,[30]]]]]],[[[83,[30]],[84,[30]]],[[83,[30]]]],[[[83,[30]],[83,[30]],[84,[30]]],[[2,[[83,[30]],[83,[30]]]]]],0,[[104,102,9],2],0,0,0,0,[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[103,7,30,30,[83,[30]]],2],[[105,9,7],2],[70,2],[70,2],[[70,9,[71,[-1]],30,30],2,[77,56,8,28]],[70,2],[[70,[71,[-1]],30,30],2,[77,56,28,8]],[70,2],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[72,72],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[12,[72]]],13],[-1,[[12,[106]]],13],[-1,[[12,[107]]],13],[-1,[[12,[108]]],13],[-1,[[12,[109]]],13],[-1,[[12,[110]]],13],[-1,[[12,[111]]],13],[7,2],[7,2],[7,2],[7,2],[7,2],[7,2],[7,2],0,0,0,0,[[72,24],92],[[106,24],92],[[107,24],92],[[108,24],92],[[109,24],92],[[110,24],92],[[111,24],92],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[108,82],[[46,[[2,[30,30]]]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,[108,[[68,[80]]]],[108,[[68,[[2,[80,[2,[30,30]]]]]]]],0,0,0,0,0,0,0,0,[108,[[68,[[2,[30,30]]]]]],[80,[[12,[72,112]]]],0,[[72,-1],12,62],[[106,-1],12,62],[[107,-1],12,62],[[108,-1],12,62],[[109,-1],12,62],[[110,-1],12,62],[[111,-1],12,62],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[108,[[12,[2,80]]]],[111,[[12,[2,80]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,[[12,[2,113]]]],0,0,0,0,0,0,[[[77,[],[[114,[-1]],[115,[-2]]]],-1,[46,[[1,[80,88]]]]],2,8,[]],[[[77,[],[[114,[-1]],[115,[-2]]]],-2,30,7],2,8,[]],[[[77,[],[[114,[-1]],[115,[-2]]]],-1,86],2,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116,116],[[[71,[-1]]],[[71,[-1]]],[77,8,8]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[[116,24],92],[[[71,[-1]],24],92,[77,8,26]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[77,[],[[114,[-1]],[115,[-2]]]],30,-2,-1,7],30,8,[]],[[116,82],30],[[[71,[-1]],73,[68,[30]],7,9],[[84,[30]]],[77,56,8]],[[],7],[[],7],[[[77,[],[[114,[-1]],[115,[-2]]]]],-2,8,[]],[[[77,[],[[114,[-1]],[115,[-2]]]],[68,[30]],73],[[2,[-1,73]]],8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,[[71,[-1]]],[77,8]],[[[71,[-1]],[83,[30]],[68,[73]]],[[12,[[84,[[68,[30]]]],[76,[93]]]]],[77,56,8]],[[[71,[-1]],73,[68,[30]]],[[68,[30]]],[77,8]],[[[71,[-1]],[68,[73]],[83,[30]],9],[[83,[[84,[30]]]]],[77,56,8]],[[[71,[-1]],73,[84,[30]]],[[68,[30]]],[77,56,8]],[[[77,[],[[114,[-1]],[115,[-2]]]],-2,-1,30,30],2,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[117,118],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[117,119],120],[7,2],[7,2],[[120,120],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[120,24],92],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[],117],0,[117,102],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,65,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[118,[[85,[121]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[121,121],[118,118],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],118],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[[121,121],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[118,119],[[46,[121]]]],[[121,24],92],[[121,24],92],[[118,24],92],[-1,-1,[]],[-1,-1,[]],[[[68,[121]]],118],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[],[[122,[121]]]],[121,[[85,[119]]]],[-1,79,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,80,[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[117,123],[[[68,[80]],124],125],[72,123],[[[85,[[2,[30,30]]]]],126],[[117,127],123],[117,128],[[],125],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,2],0,[[129,24],92],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],0,[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[127,130],[130,[[46,[129]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[119,119],[[-1,-2],2,[],[]],[7,-1,[]],[7,-1,[]],[7,2],[[119,119],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[119,24],92],[[119,24],92],[-1,-1,[]],[131,119],[132,119],[-1,-2,[],[]],[-1,-2,[],[]],[[119,-1],2,133],[[],7],[-1,-2,[],[]],[119,9],[-1,9,[]],[-1,9,[]],[119,9],[-1,79,[]],[-1,-2,[],[]],[-1,80,[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,-2,[],[]],0,[[134,102],2],[-1,-2,[],[]],[-1,-2,[],[]],[134,134],[[-1,-2],2,[],[]],0,[[],134],[7,-1,[]],[7,-1,[]],[7,2],[[134,24],92],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[[],134],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[[135,117,134,127,72,[68,[80]]],2],[7,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],2],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[[[136,[74]],72],[[81,[2]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,65,[]],[-1,-2,[],[]]],"c":[297],"p":[[5,"HashMap",0],[1,"tuple"],[10,"Eq",1396],[10,"Hash",1397],[10,"BuildHasher",1397],[10,"Default",1398],[1,"usize"],[10,"Clone",1399],[1,"bool"],[10,"Sized",1400],[10,"Borrow",1401],[6,"Result",1402],[10,"Deserializer",1403],[10,"Deserialize",1403],[5,"Drain",1404],[6,"Entry",1404],[10,"PartialEq",1396],[17,"Item"],[10,"IntoIterator",1405],[10,"Copy",1400],[5,"ExtractIf",1404],[17,"Output"],[10,"FnMut",1406],[5,"Formatter",1407],[5,"Error",1407],[10,"Debug",1407],[1,"array"],[10,"Send",1400],[10,"IntoParallelIterator",1408],[1,"f64"],[5,"Const",1409],[5,"Matrix",1410],[1,"u32"],[6,"OutputType",238],[5,"Dop853",0],[10,"SubsetOf",1411],[10,"Scalar",1412],[10,"ClosedAdd",1413],[10,"ClosedMul",1413],[10,"ClosedSub",1413],[10,"Zero",1414],[10,"Dim",1409],[10,"System",0],[5,"Dopri5",0],[10,"ClosedNeg",1413],[6,"Option",1415],[5,"Stats",238],[6,"IntegrationError",238],[5,"Rk4",0],[10,"Error",1403],[10,"IntoDeserializer",1403],[5,"Iter",1404],[5,"IterMut",1404],[5,"IntoIter",1404],[5,"IntoKeys",1404],[10,"Sync",1400],[5,"IntoValues",1404],[5,"Keys",1404],[5,"RawEntryBuilder",1404],[5,"RawEntryBuilderMut",1404],[10,"Serialize",1416],[10,"Serializer",1416],[5,"OccupiedError",1404],[5,"TryReserveError",1417],[5,"TypeId",1418],[5,"Values",1404],[5,"ValuesMut",1404],[5,"Vec",1419],[10,"Algorithm",209],[5,"NPResult",645],[5,"Engine",1018],[5,"Settings",794],[5,"Scenario",365],[6,"Comm",1367],[5,"UnboundedSender",1420],[5,"Box",1421],[10,"Predict",1018],[5,"Controller",213],[5,"CompactString",1422],[5,"String",1423],[8,"Result",0],[1,"str"],[8,"Array2",1424],[8,"Array1",1424],[1,"slice"],[5,"Infusion",365],[5,"Dose",365],[5,"CovLine",365],[5,"Block",365],[5,"Event",365],[6,"Ordering",1396],[8,"Result",1407],[10,"Error",1425],[5,"OwnedRepr",1426],[5,"Dim",1427],[5,"ArrayBase",1428],[10,"Sigma",560],[6,"ErrorType",560],[5,"ErrorPoly",560],[5,"SppOptimizer",621],[5,"Error",1429],[5,"NPCycle",645],[5,"CycleWriter",645],[5,"CycleLog",645],[5,"MetaWriter",645],[5,"Paths",794],[5,"Config",794],[5,"Random",794],[5,"Fixed",794],[5,"Constant",794],[5,"Error",794],[6,"ConfigError",1430],[5,"Error",1431],[17,"Model"],[17,"State"],[5,"Model",1018],[5,"App",1085],[5,"Actions",1145],[6,"Key",1268],[6,"AppReturn",1085],[6,"Action",1145],[5,"Iter",1432],[5,"Table",1433],[1,"u16"],[5,"Paragraph",1434],[5,"Chart",1435],[5,"Duration",1436],[5,"Tabs",1437],[6,"InputEvent",1220],[5,"Events",1245],[5,"KeyEvent",1438],[1,"u8"],[10,"Hasher",1397],[5,"CycleHistory",1338],[5,"Frame",1439],[5,"UnboundedReceiver",1420],[8,"DVector",0],[8,"OVector",0],[8,"SVector",0],[8,"Vector1",0],[8,"Vector2",0],[8,"Vector3",0],[8,"Vector4",0],[8,"Vector5",0],[8,"Vector6",0],[15,"MaxNumStepReached",330],[15,"StepSizeUnderflow",330],[15,"StiffnessDetected",330]],"b":[[29,"impl-Clear-for-HashMap%3CK,+V,+S%3E"],[30,"impl-HashMap%3CK,+V,+S%3E"],[71,"impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E"],[72,"impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E"],[73,"impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E"],[74,"impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E"],[75,"impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E"],[76,"impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E"],[117,"impl-IntoIterator-for-%26HashMap%3CK,+V,+S%3E"],[118,"impl-IntoIterator-for-%26mut+HashMap%3CK,+V,+S%3E"],[119,"impl-IntoIterator-for-HashMap%3CK,+V,+S%3E"],[121,"impl-IntoParallelIterator-for-%26mut+HashMap%3CK,+V,+S%3E"],[122,"impl-IntoParallelIterator-for-HashMap%3CK,+V,+S%3E"],[123,"impl-IntoParallelIterator-for-%26HashMap%3CK,+V,+S%3E"],[144,"impl-ParallelExtend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E"],[145,"impl-ParallelExtend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E"],[271,"impl-Display-for-IntegrationError"],[272,"impl-Debug-for-IntegrationError"],[273,"impl-Debug-for-Stats"],[274,"impl-Display-for-Stats"],[1173,"impl-Display-for-Action"],[1174,"impl-Debug-for-Action"],[1313,"impl-Debug-for-Key"],[1314,"impl-Display-for-Key"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
