var searchIndex = new Map(JSON.parse('[\
["pmcore",{"doc":"PMcore is a framework for developing and running …","t":"CCCCCCKMHMHHHHHEEEEEEEEECCCCCCCCCCHFFFFFFOOOOOONOOONNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNONNNNNNOOOONNNNNNNNNNNNNNNNNNOONNNNNNONNNNNNNNNNNNNNOOOOHNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCHHHHHPFGPKNNNNONNNNNNNNONNNNNONNNNNNMNNNNNNNNNNNNNNCHHCHCCFNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNHNNNNNOOOOHHHONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNFFFFFFFNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNOONNOOOOOOOONHONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNHCFFRKRMMMNNNNNNNNNNNNNNNNNNNNMNHNNMMNNNNNHNHHMNNNNNNNNNNNNNNFGPPCNNNNNCNNNNNNNNNNNNNNNNNNNNCNNNNNCNNNNNNNNNNNCNNGFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHPGNNNNNCNNNNNNCNNNNNNFNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNONNNNNNNNNNNNNNNNNNGPPPPPNNNNHNNNNHNNHNNNNNN","n":["algorithms","entrypoints","logger","prelude","routines","tui","Algorithm","fit","initialize_algorithm","to_npresult","simulate","start","start_internal","setup_log","trace_memory","algorithms","condensation","logger","optimization","prob","sigma","simulate","start","start_internal","condensation","datafile","evaluation","expansion","initialization","optimization","output","settings","simulation","prune","prune","Block","CovLine","Dose","Event","Infusion","Scenario","_addl","_c0","_c1","_c2","_c3","_ii","add_event_interval","amount","amount","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp_by_id_then_time","compartment","compartment","covs","covs","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dose","drop","drop","drop","drop","drop","drop","dur","dur","events","evid","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","id","init","init","init","init","init","init","input","interp","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","obs","obs_times","out","outeq","parse","reorder_with_lag","time","time","time","times","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","ipm","ipm_faer","prob","qr","sigma","burke","burke","calculate_psi","normal_likelihood","calculate_r","Add","ErrorPoly","ErrorType","Prop","Sigma","borrow","borrow","borrow_mut","borrow_mut","c","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","e_type","fmt","from","from","from_subset","from_subset","gl","init","init","into","into","is_in_subset","is_in_subset","sigma","sigma","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","adaptative_grid","adaptative_grid","sample_space","sobol","generate","d_optimizer","optim","SppOptimizer","borrow","borrow_mut","cost","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","optimize_point","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CycleLog","CycleWriter","MetaWriter","NPCycle","NPResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","converged","cycle","cycles","cycles","default","delta_objf","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","gamlam","init","init","init","init","init","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","median","new","new","new","new","new","nspp","objf","objf","par_names","population_mean_median","posterior","posterior_mean_median","psi","push_and_write","scenarios","settings","theta","theta","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","w","write","write","write_meta","write_obs","write_outputs","write_posterior","write_pred","write_theta","Config","Constant","Error","Fixed","Paths","Random","Settings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","class","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","constant","cycles","data","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","engine","error","exclude","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get","idelta","init","init","init","init","init","init","init","init_points","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","log","log_level","names","names_and_ranges","output","parameters","parameters","parameters","paths","poly","prior","random","ranges","read_settings","seed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tad","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tui","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_settings_to_file","predict","Engine","Model","Model","Predict","State","add_covs","add_dose","add_infusion","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_subset","from_subset","get_output","get_param","get_ypred","init","init","initial_state","initial_system","into","into","is_in_subset","is_in_subset","new","post_predictions","pred","sim_obs","simple_sim","state_step","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","App","AppReturn","Continue","Exit","actions","actions","borrow","borrow","borrow_mut","borrow_mut","components","deref","deref","deref_mut","deref_mut","do_action","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_subset","from_subset","init","init","inputs","into","into","is_in_subset","is_in_subset","new","state","state","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ui","vzip","vzip","Action","Actions","Next","Quit","Stop","actions","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","find","fmt","fmt","fmt","from","from","from","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","iterator","keys","to_owned","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","draw_commands","draw_logs","draw_options","draw_plot","draw_status","draw_tabs","draw_title","Input","InputEvent","borrow","borrow_mut","deref","deref_mut","drop","events","fmt","from","from_subset","init","into","is_in_subset","key","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Events","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","recv","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Alt","Backspace","Char","Ctrl","Delete","Down","End","Enter","Esc","F0","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","Home","Ins","Key","Left","PageDown","PageUp","Right","Tab","Unknown","Up","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_f","from_subset","hash","init","into","is_exit","is_in_subset","is_stop","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CycleHistory","add_cycle","borrow","borrow_mut","clone","clone_into","cycles","default","deref","deref_mut","drop","fmt","from","from_subset","init","into","is_in_subset","new","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Comm","LogMessage","Message","NPCycle","Stop","StopUI","borrow","borrow_mut","deref","deref_mut","draw","drop","from","from_subset","init","initialize_panic_handler","into","is_in_subset","start_ui","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"pmcore"],[6,"pmcore::algorithms"],[10,"pmcore::entrypoints"],[13,"pmcore::logger"],[15,"pmcore::prelude"],[24,"pmcore::routines"],[33,"pmcore::routines::condensation"],[34,"pmcore::routines::condensation::prune"],[35,"pmcore::routines::datafile"],[196,"pmcore::routines::evaluation"],[201,"pmcore::routines::evaluation::ipm"],[202,"pmcore::routines::evaluation::ipm_faer"],[203,"pmcore::routines::evaluation::prob"],[205,"pmcore::routines::evaluation::qr"],[206,"pmcore::routines::evaluation::sigma"],[252,"pmcore::routines::expansion"],[253,"pmcore::routines::expansion::adaptative_grid"],[254,"pmcore::routines::initialization"],[256,"pmcore::routines::initialization::sobol"],[257,"pmcore::routines::optimization"],[259,"pmcore::routines::optimization::d_optimizer"],[279,"pmcore::routines::output"],[408,"pmcore::routines::settings"],[603,"pmcore::routines::simulation"],[604,"pmcore::routines::simulation::predict"],[663,"pmcore::tui"],[715,"pmcore::tui::actions"],[774,"pmcore::tui::components"],[781,"pmcore::tui::inputs"],[802,"pmcore::tui::inputs::events"],[821,"pmcore::tui::inputs::key"],[886,"pmcore::tui::state"],[911,"pmcore::tui::ui"],[936,"alloc::vec"],[937,"tokio::sync::mpsc::unbounded"],[938,"alloc::boxed"],[939,"core::marker"],[940,"core::clone"],[941,"alloc::string"],[942,"eyre"],[943,"core::marker"],[944,"ndarray::aliases"],[945,"core::fmt"],[946,"core::fmt"],[947,"core::result"],[948,"core::option"],[949,"core::any"],[950,"ndarray::data_repr"],[951,"ndarray::dimension::dim"],[952,"ndarray"],[953,"anyhow"],[954,"serde::de"],[955,"config::error"],[956,"serde::ser"],[957,"std::io::error"],[958,"std::collections::hash::map"],[959,"core::fmt"],[960,"ratatui::widgets::table"],[961,"ratatui::widgets::paragraph"],[962,"ratatui::widgets::chart"],[963,"core::time"],[964,"ratatui::widgets::tabs"],[965,"crossterm::event"],[966,"core::hash"],[967,"ratatui::terminal"],[968,"tokio::sync::mpsc::unbounded"]],"d":["Provides the various algorithms used within the framework","Entry points for external use of the framework.","Logger functionality for the framework using tracing","A collection of commonly used items to simplify imports.","Routines for the crate","Terminal-based user interface components.","","","","","Simulate predictions from a model and prior distribution","Primary entrypoint for PMcore","Alternative entrypoint, primarily meant for third-party …","Setup logging for the library","","","","","","","","","","","Routines for condensing grids","Handles datafile operations","","Routines for expanding grids","Routines for initializing the grid","","Routines for writing results to file, such as predicted …","Provides routines for reading and parsing settings","","","","","","","A Event represent a single row in the Datafile","","A Scenario is a collection of blocks that represent a …","","","","","","","Adds “mock” events to a Scenario in order to generate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interior point method for solving the optimization problem","","","","","Apply the Burke’s Interior Point Method (IPM) to solve a …","","Calculate the Ψ (psi) matrix, which contains the …","Calculate the normal likelihood","","","ErrorPoly contains the information on uncertainties in …","ErrorType defines the current error model","","Contains information on the observation error","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Estimates the standard deviation of the observation error …","","","","","","","","","","","","","","","","Adaptive grid algorithm for support point expansion","","","Generates a 2-dimensional array containing a Sobol …","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Defines the result objects from a run An NPResult contains …","Defines the result objects from an NPAG run An NPResult …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create a new NPResult object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write the observations, which is the reformatted input data","","Writes the posterior support points for each individual","Writes the predictions","Writes theta, which containts the population support …","General configuration settings","Parameters which are held constant","Defines the error model and polynomial to be used","Parameters which are estimated, but fixed for the …","This struct contains the paths to the data, log and prior …","Random parameters to be estimated","Contains all settings PMcore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to the data file, see <code>datafile::parse</code> for details.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Get the upper and lower bounds of a random parameter from …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","If provided, the log file will be written to this path.","","Returns a vector of the names of the random parameters","Returns a vector of tuples containing the names and ranges …","","","","","","","If provided, PMcore will use this prior instead of a “…","","Returns a vector of the upper and lower bounds of the …","Parses the settings from a TOML configuration file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate the boundaries of the random parameters","","","","","","","","","","Writes a copy of the parsed settings to file","","","","","return the predicted values for the given scenario and …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Simulate observations for multiple scenarios and support …","","","","","","","","","","","","","","","","","The main application, containing the state","","","","","","","","","","","","","","","Handle a user action","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Defines the Terminal User Interface (TUI) for PMcore","","","We define all available action","The application should have some contextual actions.","","","","Get contextual actions. (just for building a help view)","","","","","","","","","","","","","","","","","","","","","","Given a key, find the corresponding action","","","","Returns the argument unchanged.","Returns the argument unchanged.","Build contextual action","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","All available actions","List of key associated to action","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","A small event handler that wrap crossterm input and tick …","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Constructs an new instance of <code>Events</code> with the default …","","","","","","","","","Backspace key","","","Delete key","Down arrow","End key","Both Enter (or Return) and numpad Enter","Escape key","F0 key","F1 key","F10 key","F11 key","F12 key","F2 key","F3 key","F4 key","F5 key","F6 key","F7 key","F8 key","F9 key","Home key","Insert key","Represents an key.","Left arrow","Page Down key","Page Up key","Right arrow","Tabulation key","","Up arrow","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the function key corresponding to the given number","","","","Calls <code>U::from(self)</code>.","If exit","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,5,22,23,5,5,22,23,24,25,26,5,22,23,24,25,26,5,22,23,24,25,26,5,22,23,24,25,26,26,22,23,25,26,5,22,23,24,25,26,5,22,23,24,25,26,26,5,22,23,24,25,26,22,26,25,26,5,22,23,24,25,26,5,22,23,24,25,26,5,22,23,24,25,26,5,26,5,22,23,24,25,26,26,24,5,22,23,24,25,26,5,22,23,24,25,26,5,5,5,26,26,0,5,22,23,26,5,5,22,23,24,25,26,5,22,23,24,25,26,5,22,23,24,25,26,5,22,23,24,25,26,5,22,23,24,25,26,5,22,23,24,25,26,5,22,23,24,25,26,0,0,0,0,0,0,0,0,0,0,41,0,0,41,0,42,41,42,41,42,41,41,42,41,42,41,42,41,42,41,42,41,42,41,42,42,41,42,41,42,41,40,42,41,42,41,42,41,42,41,42,41,42,41,42,41,0,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,0,0,2,47,45,46,48,2,47,45,46,48,45,45,2,45,2,47,45,45,2,47,45,46,48,2,47,45,46,48,2,47,45,46,48,46,2,47,45,46,48,2,47,45,46,48,2,47,45,46,48,45,2,47,45,46,48,2,47,45,46,48,2,47,45,46,48,0,2,47,45,46,48,45,2,45,2,0,0,0,2,47,2,2,2,45,45,2,47,45,46,48,2,47,45,46,48,2,47,45,46,48,2,47,45,46,48,2,47,45,46,48,2,47,45,46,48,2,46,48,2,2,2,2,2,2,0,0,0,0,0,0,0,4,49,50,51,52,53,54,4,49,50,51,52,53,54,50,54,4,49,50,51,52,53,54,4,49,50,51,52,53,54,4,4,50,49,4,49,50,51,52,53,54,4,49,50,51,52,53,54,4,49,50,51,52,53,54,4,49,50,51,52,53,54,50,4,50,4,4,49,50,51,52,53,54,4,49,50,51,52,53,54,4,49,50,51,52,53,54,51,50,4,49,50,51,52,53,54,50,4,49,50,51,52,53,54,4,49,50,51,52,53,54,49,50,51,51,50,51,52,53,4,54,49,4,51,0,50,4,49,50,51,52,53,54,50,4,49,50,51,52,53,54,4,49,50,51,52,53,54,4,49,50,51,52,53,54,4,49,50,51,52,53,54,4,49,50,51,52,53,54,50,4,49,50,51,52,53,54,51,54,54,4,49,50,51,52,53,54,0,0,0,0,10,0,10,10,10,10,62,3,62,3,62,3,62,3,62,3,62,3,62,3,62,3,62,3,62,3,10,62,0,62,3,10,10,62,3,62,3,3,0,3,0,0,10,62,3,62,3,62,3,62,3,62,3,62,3,62,3,0,0,67,67,0,64,64,67,64,67,0,64,67,64,67,64,64,67,67,67,67,67,67,67,67,64,67,64,67,64,67,0,64,67,64,67,64,0,64,64,67,64,67,64,67,64,67,64,67,0,64,67,0,0,68,68,68,65,68,65,68,65,68,65,68,65,65,68,65,68,65,68,65,68,68,68,68,68,68,65,68,68,65,68,65,65,68,65,68,65,68,65,68,65,68,68,68,65,68,68,65,68,65,68,65,68,65,68,65,68,65,0,0,0,0,0,0,0,76,0,76,76,76,76,76,0,76,76,76,76,76,76,0,76,76,76,76,76,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,7,7,7,7,7,7,7,7,7,0,7,7,7,7,0,7,7,0,7,7,7,7,7,7],"f":[0,0,0,0,0,0,0,[1,2],[[[3,[-1]],4,[6,[5]],[8,[7]]],[[9,[1]]],[10,11,12]],[1,2],[[[3,[-1]],13],[[15,[14]]],[10,11,16,12]],[[[3,[-1]],13],[[15,[2]]],[10,11,16,12]],[[[3,[-1]],4,[6,[5]]],[[15,[2]]],[10,11,16,12]],[[4,[8,[7]]],14],[17,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[19,[18]],[20,[18]],[21,[[14,[18,18]]]],18],14],0,0,0,0,0,0,0,0,0,0,0,0,[[5,18,18],5],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[22,22],[23,23],[24,24],[25,25],[26,26],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[26,26],27],0,0,0,0,[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],0,[28,14],[28,14],[28,14],[28,14],[28,14],[28,14],0,0,0,0,[[5,29],30],[[22,29],30],[[23,29],30],[[24,29],30],[[25,29],30],[[26,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,[[24,18],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[6,[26]]],[[33,[5,[9,[32]]]]]],0,0,0,0,[13,[[33,[[6,[5]],[9,[32]]]]]],[[5,[6,[[14,[18,28]]]]],5],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[[39,[[36,[18]],[38,[[37,[28]]]]]]],[[33,[[14,[[39,[[36,[18]],[38,[[37,[28]]]]]],18]],[9,[32]]]]]],[[[39,[[36,[18]],[38,[[37,[28]]]]]]],[[33,[[14,[[39,[[36,[18]],[38,[[37,[28]]]]]],18]],[9,[32]]]]]],[[[19,[[20,[18]]]],[6,[5]],-1],[[19,[18]]],[40,11]],[[[20,[18]],[20,[18]],[20,[18]]],18],[[[19,[18]]],[[14,[[19,[18]],[6,[28]]]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[41,41],[[-1,-2],14,[],[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,14],[28,14],0,[[41,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],28],[[],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[[40,[20,[18]]],[[20,[18]]]],[[42,[20,[18]]],[[20,[18]]]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[19,[18]],18,[21,[[14,[18,18]]]],18],[[19,[18]]]],[[4,[6,[[14,[18,18]]]]],[[19,[18]]]],0,[[28,[6,[[14,[18,18]]]],28],[[39,[[36,[18]],[38,[[37,[28]]]]]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,-2]],-3],[[33,[-4,44]]],[40,11],[10,11,12],[],[]],[28,-1,[]],[28,-1,[]],[28,14],[-1,-1,[]],[-1,-2,[],[]],[[],28],[-1,-2,[],[]],[-1,31,[]],[[[3,[-1]],[6,[5]],-2,[20,[18]]],[[43,[-2,-1]]],[10,11,12],[40,11]],[[[43,[-1,-2]],[20,[18]]],[[33,[[20,[18]],44]]],[40,11],[10,11,12]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[[-1,-2],14,[],[]],0,0,0,0,[[],45],0,[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,14],[28,14],[28,14],[28,14],[28,14],[46,14],[[2,29],30],[[47,29],30],[[45,29],30],[[46,29],30],[[48,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],28],[[],28],[[],28],[[],28],[[],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[6,[18]]],18],[[[6,[5]],[19,[18]],[19,[18]],[20,[18]],18,28,31,4],2],[[[21,[13]]],47],[[],45],[[17,[6,[13]]],46],[[],48],0,0,0,0,[[[19,[18]],[20,[18]]],[[14,[[20,[18]],[20,[18]]]]]],[[[19,[18]],[20,[18]]],[[19,[18]]]],[[[19,[18]],[19,[18]],[20,[18]]],[[14,[[19,[18]],[19,[18]]]]]],0,[[47,45,31],14],0,0,0,0,[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[46,28,18,18,[19,[18]]],14],[[48,31,28],14],[2,14],[2,14],[[2,31,[3,[-1]],18,18],14,[10,11,12,16]],[2,14],[[2,[3,[-1]],18,18],14,[10,11,16,12]],[2,14],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[4,4],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,0,0,0,[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[-1,[[33,[4]]],55],[-1,[[33,[49]]],55],[-1,[[33,[50]]],55],[-1,[[33,[51]]],55],[-1,[[33,[52]]],55],[-1,[[33,[53]]],55],[-1,[[33,[54]]],55],[28,14],[28,14],[28,14],[28,14],[28,14],[28,14],[28,14],0,0,0,0,[[4,29],30],[[49,29],30],[[50,29],30],[[51,29],30],[[52,29],30],[[53,29],30],[[54,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[51,17],[[34,[[14,[18,18]]]]]],0,[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,0,[51,[[6,[13]]]],[51,[[6,[[14,[13,[14,[18,18]]]]]]]],0,0,0,0,0,0,0,0,[51,[[6,[[14,[18,18]]]]]],[13,[[33,[4,56]]]],0,[[4,-1],33,57],[[49,-1],33,57],[[50,-1],33,57],[[51,-1],33,57],[[52,-1],33,57],[[53,-1],33,57],[[54,-1],33,57],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],0,[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[51,[[33,[14,13]]]],[54,[[33,[14,13]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,[[33,[14,58]]]],0,0,0,0,0,0,[[[10,[],[[59,[-1]],[60,[-2]]]],-1,[34,[[61,[13,24]]]]],14,12,[]],[[[10,[],[[59,[-1]],[60,[-2]]]],-2,18,28],14,12,[]],[[[10,[],[[59,[-1]],[60,[-2]]]],-1,22],14,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,62],[[[3,[-1]]],[[3,[-1]]],[10,12,12]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,14],[28,14],[[62,29],30],[[[3,[-1]],29],30,[10,12,63]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[],[[59,[-1]],[60,[-2]]]],18,-2,-1,28],18,12,[]],[[62,17],18],[[[3,[-1]],5,[6,[18]],28,31],[[20,[18]]],[10,11,12]],[[],28],[[],28],[[[10,[],[[59,[-1]],[60,[-2]]]]],-2,12,[]],[[[10,[],[[59,[-1]],[60,[-2]]]],[6,[18]],5],[[14,[-1,5]]],12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[-1,[[3,[-1]]],[10,12]],[[[3,[-1]],[19,[18]],[6,[5]]],[[33,[[20,[[6,[18]]]],[9,[32]]]]],[10,11,12]],[[[3,[-1]],5,[6,[18]]],[[6,[18]]],[10,12]],[[[3,[-1]],[6,[5]],[19,[18]],31],[[19,[[20,[18]]]]],[10,11,12]],[[[3,[-1]],5,[20,[18]]],[[6,[18]]],[10,11,12]],[[[10,[],[[59,[-1]],[60,[-2]]]],-2,-1,18,18],14,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[64,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[[64,66],67],[28,14],[28,14],[[67,67],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[67,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],28],[[],28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[[],64],0,[64,45],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[65,[[21,[68]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,68],[65,65],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[],65],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,-1,[]],[28,14],[28,14],[[68,68],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[65,66],[[34,[68]]]],[[68,29],30],[[68,29],30],[[65,29],30],[-1,-1,[]],[-1,-1,[]],[[[6,[68]]],65],[-1,-2,[],[]],[-1,-2,[],[]],[[],28],[[],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[[],[[69,[68]]]],[68,[[21,[66]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,70],[[[6,[13]],71],72],[4,70],[[[21,[[14,[18,18]]]]],73],[[64,74],70],[64,75],[[],72],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[28,-1,[]],[28,-1,[]],[28,14],0,[[76,29],30],[-1,-1,[]],[-1,-2,[],[]],[[],28],[-1,-2,[],[]],[-1,31,[]],0,[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[28,-1,[]],[28,-1,[]],[28,14],[-1,-1,[]],[-1,-2,[],[]],[[],28],[-1,-2,[],[]],[-1,31,[]],[74,77],[77,[[34,[76]]]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[[-1,-2],14,[],[]],[28,-1,[]],[28,-1,[]],[28,14],[[66,66],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[66,29],30],[[66,29],30],[78,66],[-1,-1,[]],[79,66],[-1,-2,[],[]],[[66,-1],14,80],[[],28],[-1,-2,[],[]],[66,31],[-1,31,[]],[66,31],[-1,-2,[],[]],[-1,13,[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],0,[[81,45],14],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[[-1,-2],14,[],[]],0,[[],81],[28,-1,[]],[28,-1,[]],[28,14],[[81,29],30],[-1,-1,[]],[-1,-2,[],[]],[[],28],[-1,-2,[],[]],[-1,31,[]],[[],81],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[28,-1,[]],[28,-1,[]],[[82,64,81,74,4,[6,[13]]],14],[28,14],[-1,-1,[]],[-1,-2,[],[]],[[],28],[[],14],[-1,-2,[],[]],[-1,31,[]],[[[83,[7]],4],[[15,[14]]]],[-1,[[34,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]]],"c":[],"p":[[10,"Algorithm",6],[5,"NPResult",279],[5,"Engine",604],[5,"Settings",408],[5,"Scenario",35],[5,"Vec",936],[6,"Comm",911],[5,"UnboundedSender",937],[5,"Box",938],[10,"Predict",604],[10,"Sync",939],[10,"Clone",940],[5,"String",941],[1,"tuple"],[8,"Result",942],[10,"Send",939],[1,"str"],[1,"f64"],[8,"Array2",943],[8,"Array1",943],[1,"slice"],[5,"Infusion",35],[5,"Dose",35],[5,"CovLine",35],[5,"Block",35],[5,"Event",35],[6,"Ordering",944],[1,"usize"],[5,"Formatter",945],[8,"Result",945],[1,"bool"],[10,"Error",946],[6,"Result",947],[6,"Option",948],[5,"TypeId",949],[5,"OwnedRepr",950],[1,"array"],[5,"Dim",951],[5,"ArrayBase",952],[10,"Sigma",206],[6,"ErrorType",206],[5,"ErrorPoly",206],[5,"SppOptimizer",259],[5,"Error",953],[5,"NPCycle",279],[5,"CycleWriter",279],[5,"CycleLog",279],[5,"MetaWriter",279],[5,"Paths",408],[5,"Config",408],[5,"Random",408],[5,"Fixed",408],[5,"Constant",408],[5,"Error",408],[10,"Deserializer",954],[6,"ConfigError",955],[10,"Serializer",956],[5,"Error",957],[17,"Model"],[17,"State"],[5,"HashMap",958],[5,"Model",604],[10,"Debug",945],[5,"App",663],[5,"Actions",715],[6,"Key",821],[6,"AppReturn",663],[6,"Action",715],[5,"Iter",959],[5,"Table",960],[1,"u16"],[5,"Paragraph",961],[5,"Chart",962],[5,"Duration",963],[5,"Tabs",964],[6,"InputEvent",781],[5,"Events",802],[5,"KeyEvent",965],[1,"u8"],[10,"Hasher",966],[5,"CycleHistory",886],[5,"Frame",967],[5,"UnboundedReceiver",937]],"b":[[743,"impl-Display-for-Action"],[744,"impl-Debug-for-Action"],[866,"impl-Debug-for-Key"],[867,"impl-Display-for-Key"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
