var searchIndex = new Map(JSON.parse('[\
["pmcore",{"doc":"PMcore is a framework for developing and running â€¦","t":"PFPINCNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNCNNNNNNCNNNNNNNNNNCNNNNNNNKMHMHHHHPFPIEECQQQQECEECEEPFFGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHPGPFPNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNONNNNNNNNNNNNNCCCCCCCCHCCCHHHCHHCHCCFNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNOOHOOOONONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNOOOOHHHONOOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNFFFFFFFNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNONNNNNNNNNNNNNNOONNOOOOOOOOONHOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNNNNNHFGPPCNNNNNCNNNNNNNNNNNNNNNNNNNNCNNNNNCNNNNNNNNNNNCNNGFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHPGNNNNNCNNNNNNCNNNNNNFNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNONNNNNNNNNNNNNNNNNNGPPPPPNNNNHNNNNHNNHNNNNNN","n":["Err","HashMap","Ok","Result","accumulate","algorithms","borrow","borrow_mut","capacity","clear","clear","clone","clone_from","clone_into","contains_key","default","deref","deref_mut","deserialize","drain","drop","entry","entrypoints","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend_one","extend_one","extend_reserve","extend_reserve","extract_if","fmt","from","from","from_iter","from_par_iter","from_subset","get","get_key_value","get_many_mut","get_many_unchecked_mut","get_mut","hasher","index","init","initial","insert","into","into_deserializer","into_iter","into_iter","into_iter","into_keys","into_par_iter","into_par_iter","into_par_iter","into_values","is_empty","is_in_subset","iter","iter_mut","keys","len","logger","new","par_drain","par_extend","par_extend","par_iter","par_iter_mut","prelude","raw_entry","raw_entry_mut","remove","remove_entry","reserve","retain","routines","serialize","shrink_to","shrink_to_fit","to_owned","to_subset","to_subset_unchecked","try_from","try_insert","try_into","try_reserve","tui","type_id","values","values_mut","vzip","with_capacity","with_capacity_and_hasher","with_hasher","Algorithm","fit","initialize_algorithm","to_npresult","simulate","start","start_internal","setup_log","Err","HashMap","Ok","Result","algorithms","condensation","data","fa","fetch_cov","fetch_params","lag","logger","models","optimization","simulate","simulator","start","start_internal","Add","Data","ErrorModel","ErrorType","Prop","Subject","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","estimate_theta","expand","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get_subjects","id","init","init","init","init","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","occasions","optimal_support_point","read_pmetrics","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_pmetrics_observations","one_compartment","one_compartment_with_absorption","Analytical","Equation","ODE","PopulationPredictions","SDE","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from","from_subset","from_subset","get_population_predictions","get_psi","init","init","into","into","is_in_subset","is_in_subset","new_analytical","new_ode","simulate_subject","subject_predictions","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","condensation","evaluation","expansion","initialization","optimization","output","settings","prune","prune","ipm","ipm_faer","qr","burke","burke","calculate_r","adaptative_grid","adaptative_grid","sample_space","sobol","generate","d_optimizer","optim","SppOptimizer","borrow","borrow_mut","cost","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","optimize_point","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CycleLog","CycleWriter","NPCycle","NPResult","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","converged","converged","create_output_file","cycle","cycles","cycles","data","default","delta_objf","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","flush","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","gamlam","init","init","init","init","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","median","new","new","new","new","nspp","objf","objf","par_names","population_mean_median","posterior","posterior_mean_median","psi","push_and_write","settings","theta","theta","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","w","write","write_obs","write_outputs","write_posterior","write_pred","write_theta","Config","Constant","Error","Fixed","Paths","Random","Settings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","class","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","constant","cycles","data","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","engine","error","error_type","exclude","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get","idelta","init","init","init","init","init","init","init","init_points","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","log","log_level","names","names_and_ranges","output","output_folder","parameters","parameters","parameters","paths","poly","prior","random","ranges","read_settings","sampler","seed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tad","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tui","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_settings_to_file","App","AppReturn","Continue","Exit","actions","actions","borrow","borrow","borrow_mut","borrow_mut","components","deref","deref","deref_mut","deref_mut","do_action","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_subset","from_subset","init","init","inputs","into","into","is_in_subset","is_in_subset","new","state","state","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","ui","vzip","vzip","Action","Actions","Next","Quit","Stop","actions","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","find","fmt","fmt","fmt","from","from","from","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","iterator","keys","to_compact_string","to_owned","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","draw_commands","draw_logs","draw_options","draw_plot","draw_status","draw_tabs","draw_title","Input","InputEvent","borrow","borrow_mut","deref","deref_mut","drop","events","fmt","from","from_subset","init","into","is_in_subset","key","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Events","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","recv","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Alt","Backspace","Char","Ctrl","Delete","Down","End","Enter","Esc","F0","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","Home","Ins","Key","Left","PageDown","PageUp","Right","Tab","Unknown","Up","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_f","from_subset","hash","init","into","is_exit","is_in_subset","is_stop","to_compact_string","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CycleHistory","add_cycle","borrow","borrow_mut","clone","clone_into","cycles","default","deref","deref_mut","drop","fmt","from","from_subset","init","into","is_in_subset","new","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Comm","LogMessage","Message","NPCycle","Stop","StopUI","borrow","borrow_mut","deref","deref_mut","draw","drop","from","from_subset","init","initialize_panic_handler","into","is_in_subset","start_ui","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"pmcore"],[101,"pmcore::algorithms"],[105,"pmcore::entrypoints"],[108,"pmcore::logger"],[109,"pmcore::prelude"],[127,"pmcore::prelude::data"],[229,"pmcore::prelude::models"],[231,"pmcore::prelude::simulator"],[280,"pmcore::routines"],[287,"pmcore::routines::condensation"],[288,"pmcore::routines::condensation::prune"],[289,"pmcore::routines::evaluation"],[292,"pmcore::routines::evaluation::ipm"],[293,"pmcore::routines::evaluation::ipm_faer"],[294,"pmcore::routines::evaluation::qr"],[295,"pmcore::routines::expansion"],[296,"pmcore::routines::expansion::adaptative_grid"],[297,"pmcore::routines::initialization"],[299,"pmcore::routines::initialization::sobol"],[300,"pmcore::routines::optimization"],[302,"pmcore::routines::optimization::d_optimizer"],[322,"pmcore::routines::output"],[432,"pmcore::routines::settings"],[630,"pmcore::tui"],[682,"pmcore::tui::actions"],[742,"pmcore::tui::components"],[749,"pmcore::tui::inputs"],[770,"pmcore::tui::inputs::events"],[789,"pmcore::tui::inputs::key"],[855,"pmcore::tui::state"],[880,"pmcore::tui::ui"],[905,"core::cmp"],[906,"core::hash"],[907,"core::hash"],[908,"core::clone"],[909,"core::marker"],[910,"core::borrow"],[911,"core::result"],[912,"serde::de"],[913,"serde::de"],[914,"std::collections::hash::map"],[915,"std::collections::hash::map"],[916,"core::fmt"],[917,"core::fmt"],[918,"core::option"],[919,"serde::de"],[920,"serde::ser"],[921,"core::any"],[922,"std::collections::hash::map"],[923,"alloc::boxed"],[924,"alloc::string"],[925,"ndarray::data_repr"],[926,"ndarray::dimension::dim"],[927,"ndarray"],[928,"alloc::vec"],[929,"pharmsol::data"],[930,"std::path"],[931,"core::error"],[932,"compact_str"],[933,"std::fs"],[934,"nalgebra::base::dimension"],[935,"nalgebra::base::dimension"],[936,"nalgebra::base::matrix"],[937,"pharmsol::data"],[938,"ndarray::aliases"],[939,"ndarray::aliases"],[940,"std::io::error"],[941,"core::fmt"],[942,"std::io::error"],[943,"ratatui::widgets::table::table"],[944,"ratatui::widgets::paragraph"],[945,"ratatui::widgets::chart"],[946,"core::time"],[947,"ratatui::widgets::tabs"],[948,"crossterm::event"],[949,"core::hash"],[950,"tokio::sync::mpsc::unbounded"]],"d":["Contains the error value","A hash map implemented with quadratic probing and SIMD â€¦","Contains the success value","type alias for <code>Result&lt;T, Report&gt;</code>","","Provides the various algorithms used within the framework","","","Returns the number of elements the map can hold without â€¦","Clears the map, removing all key-value pairs. Keeps the â€¦","","","","","Returns <code>true</code> if the map contains a value for the specified â€¦","Creates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value â€¦","","","","Clears the map, returning all key-value pairs as an â€¦","","Gets the given keyâ€™s corresponding entry in the map for â€¦","Entry points for external use of the framework.","","","","","","","","","","","","","Creates an iterator which uses a closure to determine if â€¦","","Examples","Returns the argument unchanged.","","","","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied â€¦","Attempts to get mutable references to <code>N</code> values in the map â€¦","Attempts to get mutable references to <code>N</code> values in the map â€¦","Returns a mutable reference to the value corresponding to â€¦","Returns a reference to the mapâ€™s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the â€¦","","","Inserts a key-value pair into the map.","Calls <code>U::from(self)</code>.","","Creates a consuming iterator, that is, one that moves each â€¦","","","Creates a consuming iterator visiting all the keys in â€¦","","","","Creates a consuming iterator visiting all the values in â€¦","Returns <code>true</code> if the map contains no elements.","","An iterator visiting all key-value pairs in arbitrary â€¦","An iterator visiting all key-value pairs in arbitrary â€¦","An iterator visiting all keys in arbitrary order. The â€¦","Returns the number of elements in the map.","Logger functionality for the framework using tracing","Creates an empty <code>HashMap</code>.","","","","","","A collection of commonly used items to simplify imports.","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Removes a key from the map, returning the value at the key â€¦","Removes a key from the map, returning the stored key and â€¦","Reserves capacity for at least <code>additional</code> more elements to â€¦","Retains only the elements specified by the predicate.","Routines for the crate","","Shrinks the capacity of the map with a lower limit. It â€¦","Shrinks the capacity of the map as much as possible. It â€¦","","","","","Tries to insert a key-value pair into the map, and returns â€¦","","Tries to reserve capacity for at least <code>additional</code> more â€¦","Terminal-based user interface components.","","An iterator visiting all values in arbitrary order. The â€¦","An iterator visiting all values mutably in arbitrary order.","","Creates an empty <code>HashMap</code> with at least the specified â€¦","Creates an empty <code>HashMap</code> with at least the specified â€¦","Creates an empty <code>HashMap</code> which will use the given hash â€¦","","","","","Simulate predictions from a model and prior distribution","Primary entrypoint for PMcore","Alternative entrypoint, primarily meant for third-party â€¦","Setup logging for the library","Contains the error value","A hash map implemented with quadratic probing and SIMD â€¦","Contains the success value","type alias for <code>Result&lt;T, Report&gt;</code>","","","","","","","","","","","","","","","","Data is a collection of Subjects, which are collections of â€¦","","","","Subject is a collection of blocks for one individual","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Read a Pmetrics datafile and convert it to a Data object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Analytical for one compartment Assumptions:","Analytical for one compartment with absorption Assumptions:","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Routines for condensing grids","","Routines for expanding grids","Routines for initializing the grid","","Routines for writing results to file, such as predicted â€¦","Provides routines for reading and parsing settings","","","Interior point method for solving the optimization problem","","","Apply the Burkeâ€™s Interior Point Method (IPM) to solve a â€¦","","","","Adaptive grid algorithm for support point expansion","","","Generates a 2-dimensional array containing a Sobol â€¦","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Defines the result objects from a run An NPCycle contains â€¦","Defines the result objects from an NPAG run An NPResult â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create a new NPResult object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write the observations, which is the reformatted input data","","Writes the posterior support points for each individual","Writes the predictions","Writes theta, which containts the population support â€¦","General configuration settings","Parameters which are held constant","Defines the error model and polynomial to be used","Parameters which are estimated, but fixed for the â€¦","This struct contains the paths to the data, log and prior â€¦","Random parameters to be estimated","Contains all settings for PMcore","","","","","","","","","","","","","","","If true (default), cache predicted values","","","","","","","","","","","","","","","","General configuration settings","Parameters which are held constant","Maximum number of cycles","Path to the data file, see <code>datafile::parse</code> for details.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Denotes the algorithm to use, <code>NPAG</code> is the only supported â€¦","Defines the error model and polynomial to be used","","Vector if IDs to exclude","Parameters which are estimated, but fixed for the â€¦","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Get the upper and lower bounds of a random parameter from â€¦","The interval (in hours) at which to generate output â€¦","","","","","","","","Default number of points in the initial grid","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","If provided, the log file will be written to this path.","Maximum log level for the logger","Returns a vector of the names of the random parameters","Returns a vector of tuples containing the names and ranges â€¦","If true (default), write outputs to files. Output path is â€¦","If provided, and Config::output is true, PMcore will write â€¦","","","","Paths to the data, log and prior files","","If provided, PMcore will use this prior instead of a â€œâ€¦","Random parameters to be estimated","Returns a vector of the upper and lower bounds of the â€¦","Parses the settings from a TOML configuration file","","Default seed for the initialization","","","","","","","","Generate predictions at Config::idelta intervals to this â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate the boundaries of the random parameters","","","","","","","","","","Writes a copy of the parsed settings to file","The main application, containing the state","","","","","","","","","","","","","","","Handle a user action","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Defines the Terminal User Interface (TUI) for PMcore","","","We define all available action","The application should have some contextual actions.","","","","Get contextual actions. (just for building a help view)","","","","","","","","","","","","","","","","","","","","","","Given a key, find the corresponding action","","","","Returns the argument unchanged.","Build contextual action","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","All available actions","List of key associated to action","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","A small event handler that wrap crossterm input and tick â€¦","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Constructs an new instance of <code>Events</code> with the default â€¦","","","","","","","","","Backspace key","","","Delete key","Down arrow","End key","Both Enter (or Return) and numpad Enter","Escape key","F0 key","F1 key","F10 key","F11 key","F12 key","F2 key","F3 key","F4 key","F5 key","F6 key","F7 key","F8 key","F9 key","Home key","Insert key","Represents an key.","Left arrow","Page Down key","Page Up key","Right arrow","Tabulation key","","Up arrow","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the function key corresponding to the given number","","","","Calls <code>U::from(self)</code>.","If exit","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[59,0,59,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,50,0,50,0,0,0,0,59,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,0,0,0,61,0,60,61,62,54,60,61,62,54,60,61,62,54,60,61,62,54,60,61,62,54,60,61,62,54,62,60,61,62,54,54,54,60,61,62,62,54,54,60,61,62,54,60,61,62,54,54,62,60,61,62,54,60,61,62,54,60,61,62,54,60,62,62,0,62,54,60,61,62,54,62,54,60,61,62,54,60,61,62,54,60,61,62,54,60,61,62,54,60,61,62,54,60,61,62,54,0,0,0,52,0,52,0,52,78,52,78,52,52,52,78,78,52,78,52,78,52,52,78,78,52,78,52,0,78,78,52,78,52,78,52,52,52,52,78,52,78,52,78,52,78,52,78,52,78,52,78,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,0,0,0,51,91,86,89,51,91,86,89,86,86,51,86,0,86,51,91,51,86,86,51,91,86,89,51,91,86,89,51,91,86,89,89,51,91,86,89,51,91,86,89,51,91,86,89,86,51,91,86,89,51,91,86,89,51,91,86,89,0,51,91,86,89,86,51,86,51,0,0,0,51,91,51,51,86,86,51,91,86,89,51,91,86,89,51,91,86,89,51,91,86,89,51,91,86,89,51,91,86,89,51,89,51,51,51,51,51,0,0,0,0,0,0,0,53,92,93,94,95,96,97,53,92,93,94,95,96,97,93,97,53,92,93,94,95,96,97,53,92,93,94,95,96,97,53,53,93,92,53,92,93,94,95,96,97,53,92,93,94,95,96,97,53,92,93,94,95,96,97,53,92,93,94,95,96,97,93,53,97,93,53,53,92,93,94,95,96,97,53,92,93,94,95,96,97,53,92,93,94,95,96,97,94,93,53,92,93,94,95,96,97,93,53,92,93,94,95,96,97,53,92,93,94,95,96,97,92,93,94,94,93,92,94,95,96,53,97,92,53,94,0,93,93,53,92,93,94,95,96,97,93,53,92,93,94,95,96,97,53,92,93,94,95,96,97,53,92,93,94,95,96,97,53,92,93,94,95,96,97,53,92,93,94,95,96,97,93,53,92,93,94,95,96,97,94,97,97,53,92,93,94,95,96,97,0,0,0,103,103,0,100,100,103,100,103,0,100,103,100,103,100,100,103,103,103,103,103,103,103,103,100,103,100,103,100,103,0,100,103,100,103,100,0,100,100,103,100,103,100,103,100,103,100,103,0,100,103,0,0,104,104,104,101,104,101,104,101,104,101,104,101,101,104,101,104,101,104,101,104,104,104,104,104,104,101,104,104,101,104,101,101,104,101,104,101,104,101,104,101,104,104,104,104,101,104,104,101,104,101,104,101,104,101,104,101,104,101,0,0,0,0,0,0,0,112,0,112,112,112,112,112,0,112,112,112,112,112,112,0,112,112,112,112,112,112,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,55,55,55,55,55,55,55,55,55,0,55,55,55,55,0,55,55,0,55,55,55,55,55,55],"f":"````{{{b{ceg}}{d{ce}}}f{hj}{}{ln}}`{ce{}{}}0{{{b{ceg}}}A`{}{}{}}{{{b{ceg}}}f{}{}{}}{{{b{ceg}}}f{jh}{}l}{{{b{ceg}}}{{b{ceg}}}AbAbAb}{{{b{ceg}}{b{ceg}}}fAbAbAb}{{ce}f{}{}}{{{b{egi}}c}Ad{jhAf}{{Ah{c}}hj}{}l}{{}{{b{ceg}}}{}{}n}{A`c{}}0{c{{Aj{{b{egi}}}}}Al{Anhj}An{ln}}{{{b{ceg}}}{{B`{ce}}}{}{}{}}{A`f}{{{b{ceg}}c}{{Bb{ce}}}{hj}{}l}`{{{b{ceg}}{b{ceg}}}Ad{hj}Bdl}{{ce}Ad{}{}}0000{{{b{ceg}}i}f{hjBf}Bfl{{Bj{}{{Bh{{d{ce}}}}}}}}{{{b{ceg}}i}f{hj}{}l{{Bj{}{{Bh{{d{ce}}}}}}}}{{{b{ceg}}{d{ce}}}f{hjBf}Bfl}{{{b{ceg}}{d{ce}}}f{hj}{}l}{{{b{ceg}}A`}f{hjBf}Bfl}{{{b{ceg}}A`}f{hj}{}l}{{{b{ceg}}i}{{Bl{cei}}}{}{}{}{{C`{ce}{{Bn{Ad}}}}}}{{{b{ceg}}Cb}{{Aj{fCd}}}CfCf{}}{{{Ch{{d{ce}}}}}{{b{ce}}}{hj}{}}{cc{}}{g{{b{cei}}}{hj}{}{{Bj{}{{Bh{{d{ce}}}}}}}{ln}}{g{{b{cei}}}{hjCj}Cj{{Cl{}{{Bh{{d{ce}}}}}}}{lnCj}}{ce{}{}}{{{b{egi}}c}{{Cn{g}}}{jhAf}{{Ah{c}}hj}{}l}{{{b{egi}}c}{{Cn{{d{eg}}}}}{jhAf}{{Ah{c}}hj}{}l}{{{b{egi}}{Ch{c}}}{{Cn{{Ch{g}}}}}{jhAf}{{Ah{c}}hj}{}l}02{{{b{ceg}}}g{}{}{}}{{{b{egi}}c}g{hjAf}{hj{Ah{c}}}{}l}{{}A`}{{{Cn{A`}}}{{b{ceg}}}{hj}{}{ln}}{{{b{ceg}}ce}{{Cn{e}}}{hj}{}l}8{{{b{egi}}}{}D`{{Db{c}}hj}{{Db{c}}}l}{{{b{ceg}}}{{Dd{ce}}}{}{}{}}{{{b{ceg}}}{{Df{ce}}}{}{}{}}{{{b{ceg}}}{{Dh{ce}}}{}{}{}}{{{b{ceg}}}{{Dj{ce}}}{}{}{}}{{{b{ceg}}}{}{jhDl}Cjl}{{{b{ceg}}}{}{jhDl}Dll}{{{b{ceg}}}{}{jhCj}Cjl}{{{b{ceg}}}{{Dn{ce}}}{}{}{}}{{{b{ceg}}}Ad{}{}{}}{cAd{}}78{{{b{ceg}}}{{E`{ce}}}{}{}{}}{{{b{ceg}}}A`{}{}{}}`{{}{{b{ce}}}{}{}}6{{{b{ceg}}i}f{hjCj}Cj{lCj}{{Cl{}{{Bh{{d{ce}}}}}}}}{{{b{ceg}}i}f{BfhjCjDl}{BfCjDl}{lCj}{{Cl{}{{Bh{{d{ce}}}}}}}}{c{}{}}0`{{{b{ceg}}}{{Eb{ceg}}}{}{}l}{{{b{ceg}}}{{Ed{ceg}}}{}{}l}{{{b{egi}}c}{{Cn{g}}}{jhAf}{{Ah{c}}hj}{}l}{{{b{egi}}c}{{Cn{{d{eg}}}}}{jhAf}{{Ah{c}}hj}{}l}{{{b{ceg}}A`}f{hj}{}l}{{{b{ceg}}i}f{}{}{}{{C`{ce}{{Bn{Ad}}}}}}`{{{b{ceg}}i}AjEfEf{}Eh}2{{{b{ceg}}}f{hj}{}l}{ce{}{}}{c{{Cn{e}}}{}{}}1{c{{Aj{e}}}{}{}}{{{b{ceg}}ce}{{Aj{e{Ej{ce}}}}}{hj}{}l}1{{{b{ceg}}A`}{{Aj{fEl}}}{hj}{}l}`{cEn{}}{{{b{ceg}}}{{F`{ce}}}{}{}{}}{{{b{ceg}}}{{Fb{ce}}}{}{}{}}7{A`{{b{ce}}}{}{}}{{A`c}{{b{egc}}}{}{}{}}{c{{b{egc}}}{}{}{}}`{FdFf}{{FhFjFl{Cn{{G`{Fn}}}}}{{Gb{Fd}}}}1{{FhGd}{{Gf{f}}}}{{FhGd}{{Gf{Ff}}}}{{FhFjFl}{{Gf{Ff}}}}{{Fj{Cn{{G`{Fn}}}}}f}````````````````````````{ce{}{}}0000000{GhGh}{GjGj}{GlGl}{FlFl}{{ce}f{}{}}000{A`c{}}0000000{c{{Aj{Gl}}}Al}{A`f}000{{FlFh{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}}{{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}}}{{FlGnGn}Fl}{{GhCb}{{Aj{fCd}}}}{{GjCb}{{Aj{fCd}}}}{{GlCb}{{Aj{fCd}}}}0{{FlCb}{{Aj{fCd}}}}0{cc{}}000????{Fl{{Hf{Gl}}}}{GlGd}{{}A`}000{ce{}{}}000{cAd{}}000{{{d{GnGnGnGn}}GnGj}Gh}{Gl{{Hf{Hh}}}}{{GlFh{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}}{{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}}}{Hj{{Aj{Fl{Gb{Hl}}}}}}{cHn{}}06666{cGd{}}0{c{{Cn{e}}}{}{}}0008888{c{{Aj{e}}}{}{}}0000000{cEn{}}000::::{{FlI`}f}{{{Ih{GnIbId{If{GnIbId}}}}{Ih{GnIbId{If{GnIbId}}}}Gn{Ih{GnIbId{If{GnIbId}}}}Ij}{{Ih{GnIbId{If{GnIbId}}}}}}0`````<<<<{FhFh}{{ce}f{}{}}{{}Il}{A`c{}}000{A`f}0{{FhCb}{{Aj{fCd}}}}{cc{}}{{{Hd{{H`{In}}{Hb{{Ch{A`}}}}}}}Il}1{ce{}{}}0{{FhFl{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}Ad}Il}{{IlGh}{{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}}}{{}A`}033{cAd{}}0{{{J`{{Ih{GnIbId{If{GnIbId}}}}{Ih{GnIbId{If{GnIbId}}}}Gn{Ih{GnIbId{If{GnIbId}}}}Ij}{{Bn{{Ih{GnIbId{If{GnIbId}}}}}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}Ij}{{Bn{f}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}}{{Bn{{b{A`Gn}}}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}}{{Bn{{b{A`Gn}}}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}GnIj{Ih{GnIbId{If{GnIbId}}}}}{{Bn{f}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}{Ih{GnIbId{If{GnIbId}}}}GnIj{Ih{GnIbId{If{GnIbId}}}}}{{Bn{f}}}}{d{A`A`}}}Fh}{{{J`{{Ih{GnIbId{If{GnIbId}}}}{Ih{GnIbId{If{GnIbId}}}}Gn{Ih{GnIbId{If{GnIbId}}}}{Ih{GnIbId{If{GnIbId}}}}Ij}{{Bn{f}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}}{{Bn{{b{A`Gn}}}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}}{{Bn{{b{A`Gn}}}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}GnIj{Ih{GnIbId{If{GnIbId}}}}}{{Bn{f}}}}{J`{{Ih{GnIbId{If{GnIbId}}}}{Ih{GnIbId{If{GnIbId}}}}GnIj{Ih{GnIbId{If{GnIbId}}}}}{{Bn{f}}}}{d{A`A`}}}Fh}{{FhGl{Hf{Gn}}}In}`7{c{{Cn{e}}}{}{}}088{c{{Aj{e}}}{}{}}000{cEn{}}0::````````{{{Jb{Gn}}{Jd{Gn}}{Jf{{d{GnGn}}}}Gn}f}```{{{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}}{{Aj{{d{{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}Gn}}{Gb{Hl}}}}}}0{{{Jb{Gn}}}{{d{{Jb{Gn}}{Hf{A`}}}}}}`{{{Jb{Gn}}Gn{Jf{{d{GnGn}}}}Gn}{{Jb{Gn}}}}{{Fj{Hf{{d{GnGn}}}}}{{Jb{Gn}}}}`{{A`{Hf{{d{GnGn}}}}A`}{{Hd{{H`{Gn}}{Hb{{Ch{A`}}}}}}}}```{ce{}{}}0{{Jhc}{{Aj{eJj}}}{}{}}{A`c{}}0{A`f}{cc{}}4{{}A`}5{cAd{}}{{FhFlGh{Jd{Gn}}}Jh}{{Jh{Jd{Gn}}}{{Aj{{Jd{Gn}}Jj}}}}{c{{Cn{e}}}{}{}}9{c{{Aj{e}}}{}{}}0{cEn{}};````;;;;;;;;{JlJl}{{ce}f{}{}}``{{FjJn}{{K`{I`}}}}````{{}Jl}`========<<<<{Kbf}{{FfCb}Kd}{{KfCb}Kd}{{JlCb}Kd}{{KbCb}Kd}{cc{}}000{ce{}{}}000`{{}A`}0001111{cAd{}}000{{{Hf{Gn}}}Gn}{{Fl{Jb{Gn}}{Jb{Gn}}{Jd{Gn}}GnA`AdFj}Ff}{FjKf}<{FjKb}````{{{Jb{Gn}}{Jd{Gn}}}{{d{{Jd{Gn}}{Jd{Gn}}}}}}{{{Jb{Gn}}{Jd{Gn}}}{{Jb{Gn}}}}{{{Jb{Gn}}{Jb{Gn}}{Jd{Gn}}}{{d{{Jb{Gn}}{Jb{Gn}}}}}}`{{KfJlAd}f}```:{c{{Cn{e}}}{}{}}000;;;;{c{{Aj{e}}}{}{}}0000000{cEn{}}000====`{{KbA`AdGnGn{Jb{Gn}}}f}{Fff}{{FfAdFhGnGn}f}1{{FfFhGnGn}f}2```````{ce{}{}}0000000000000``{FjFj}{KhKh}{KjKj}{KlKl}{KnKn}{L`L`}{LbLb}{{ce}f{}{}}000000````{A`c{}}0000000000000{c{{Aj{Fj}}}Al}{c{{Aj{Kh}}}Al}{c{{Aj{Kj}}}Al}{c{{Aj{Kl}}}Al}{c{{Aj{Kn}}}Al}{c{{Aj{L`}}}Al}{c{{Aj{Lb}}}Al}{A`f}000000``{LbGj}``{{FjCb}Kd}{{KhCb}Kd}{{KjCb}Kd}{{KlCb}Kd}{{KnCb}Kd}{{L`Cb}Kd}{{LbCb}Kd}{cc{}}000000{ce{}{}}000000{{KlJn}{{Cn{{d{GnGn}}}}}}`{{}A`}000000`2222222{cAd{}}000000``{Kl{{Hf{Gd}}}}{Kl{{Hf{{d{Gd{d{GnGn}}}}}}}}`````````{Kl{{Hf{{d{GnGn}}}}}}{Gd{{Aj{FjLd}}}}``{{Fjc}AjEh}{{Khc}AjEh}{{Kjc}AjEh}{{Klc}AjEh}{{Knc}AjEh}{{L`c}AjEh}{{Lbc}AjEh}`>>>>>>>{c{{Cn{e}}}{}{}}000000???????{c{{Aj{e}}}{}{}}0000000000000`{cEn{}}000000{Kl{{Aj{fGd}}}}{Lb{{Aj{fGd}}}}`{ce{}{}}000000{Fj{{Aj{fLf}}}}`````{LhLj}2222`{A`c{}}000{{LhLl}Ln}{A`f}0{{LnLn}Ad}{{ce}Ad{}{}}0000{{LnCb}Kd}{cc{}}099{{}A`}0`::{cAd{}}0{{}Lh}`{LhJl}{c{{Cn{e}}}{}{}}0>>{c{{Aj{e}}}{}{}}000{cEn{}}0`{ce{}{}}0`````{Lj{{Jf{M`}}}}1111{M`M`}{LjLj}{{ce}f{}{}}0{{}Lj}{A`c{}}000{A`f}0{{M`M`}Ad}{{ce}Ad{}{}}0000{{LjLl}{{Cn{M`}}}}{{M`Cb}Kd}0{{LjCb}Kd}{cc{}}{{{Hf{M`}}}Lj}1>>{{}A`}0??{cAd{}}0{{}{{Mb{M`}}}}{M`{{Jf{Ll}}}}{cHn{}}{ce{}{}}0{cGd{}}{c{{Cn{e}}}{}{}}022{c{{Aj{e}}}{}{}}000{cEn{}}044{LhMd}{{{Hf{Gd}}Mf}Mh}{FjMd}{{{Jf{{d{GnGn}}}}}Mj}{{LhMl}Md}{LhMn}{{}Mh}``;;{A`c{}}0{A`f}`{{N`Cb}Kd}{cc{}}?{{}A`}{ce{}{}}{cAd{}}`{c{{Cn{e}}}{}{}}2{c{{Aj{e}}}{}{}}0{cEn{}}4`4499864543{MlNb}{Nb{{Cn{N`}}}}463326````````````````````````````````66{LlLl}{{ce}f{}{}}==<{{LlLl}Ad}{{ce}Ad{}{}}0000{{LlCb}Kd}0={NdLl}{NfLl}={{Llc}fNh}?>{LlAd}>0{cHn{}}{ce{}{}}{cGd{}}{c{{Cn{e}}}{}{}}2{c{{Aj{e}}}{}{}}0{cEn{}}4`{{NjJl}f}55{NjNj}?`{{}Nj}{A`c{}}0{A`f}{{NjCb}Kd}{cc{}};{{}A`}<{cAd{}}6=;=::9=``````==55{{NlLhNjMlFj{Hf{Gd}}}f}53>2{{}f}?2{{{Nn{Fn}}Fj}{{Gf{f}}}}>{ce{}{}}>>=0","c":[],"p":[[5,"HashMap",0],[1,"tuple"],[1,"unit"],[10,"Eq",905],[10,"Hash",906],[10,"BuildHasher",906],[10,"Default",907],[1,"usize"],[10,"Clone",908],[1,"bool"],[10,"Sized",909],[10,"Borrow",910],[6,"Result",911],[10,"Deserializer",912],[10,"Deserialize",912],[5,"Drain",913],[6,"Entry",913],[10,"PartialEq",905],[10,"Copy",909],[17,"Item"],[10,"IntoIterator",914],[5,"ExtractIf",913],[17,"Output"],[10,"FnMut",915],[5,"Formatter",916],[5,"Error",916],[10,"Debug",916],[1,"array"],[10,"Send",909],[10,"IntoParallelIterator",917],[6,"Option",918],[10,"Error",912],[10,"IntoDeserializer",912],[5,"IntoIter",913],[5,"IterMut",913],[5,"Iter",913],[5,"IntoKeys",913],[10,"Sync",909],[5,"IntoValues",913],[5,"Keys",913],[5,"RawEntryBuilder",913],[5,"RawEntryBuilderMut",913],[10,"Serialize",919],[10,"Serializer",919],[5,"OccupiedError",913],[5,"TryReserveError",920],[5,"TypeId",921],[5,"Values",913],[5,"ValuesMut",913],[10,"Algorithm",101],[5,"NPResult",322],[6,"Equation",231],[5,"Settings",432],[5,"Data",127],[6,"Comm",880],[5,"UnboundedSender",922],[5,"Box",923],[5,"String",924],[8,"Result",0],[5,"ErrorModel",127],[6,"ErrorType",127],[5,"Subject",127],[1,"f64"],[5,"OwnedRepr",925],[5,"Dim",926],[5,"ArrayBase",927],[5,"Vec",928],[5,"Occasion",929],[5,"Path",930],[10,"Error",931],[5,"CompactString",932],[5,"File",933],[5,"Dyn",934],[5,"Const",934],[5,"VecStorage",935],[5,"Matrix",936],[5,"Covariates",929],[5,"PopulationPredictions",231],[5,"SubjectPredictions",937],[1,"fn"],[8,"Array2",938],[8,"Array1",938],[1,"slice"],[5,"SppOptimizer",302],[5,"Error",939],[5,"NPCycle",322],[1,"str"],[8,"Result",940],[5,"CycleWriter",322],[8,"Result",916],[5,"CycleLog",322],[5,"Paths",432],[5,"Config",432],[5,"Random",432],[5,"Fixed",432],[5,"Constant",432],[5,"Error",432],[6,"ConfigError",941],[5,"Error",940],[5,"App",630],[5,"Actions",682],[6,"Key",789],[6,"AppReturn",630],[6,"Action",682],[5,"Iter",942],[5,"Table",943],[1,"u16"],[5,"Paragraph",944],[5,"Chart",945],[5,"Duration",946],[5,"Tabs",947],[6,"InputEvent",749],[5,"Events",770],[5,"KeyEvent",948],[1,"u8"],[10,"Hasher",906],[5,"CycleHistory",855],[5,"Frame",949],[5,"UnboundedReceiver",922]],"b":[[9,"impl-HashMap%3CK,+V,+S%3E"],[10,"impl-Clear-for-HashMap%3CK,+V,+S%3E"],[29,"impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E"],[30,"impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E"],[31,"impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E"],[32,"impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E"],[33,"impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E"],[34,"impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E"],[54,"impl-IntoIterator-for-HashMap%3CK,+V,+S%3E"],[55,"impl-IntoIterator-for-%26mut+HashMap%3CK,+V,+S%3E"],[56,"impl-IntoIterator-for-%26HashMap%3CK,+V,+S%3E"],[58,"impl-IntoParallelIterator-for-%26mut+HashMap%3CK,+V,+S%3E"],[59,"impl-IntoParallelIterator-for-%26HashMap%3CK,+V,+S%3E"],[60,"impl-IntoParallelIterator-for-HashMap%3CK,+V,+S%3E"],[71,"impl-ParallelExtend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E"],[72,"impl-ParallelExtend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E"],[166,"impl-Display-for-Subject"],[167,"impl-Debug-for-Subject"],[168,"impl-Debug-for-Data"],[169,"impl-Display-for-Data"],[710,"impl-Display-for-Action"],[711,"impl-Debug-for-Action"],[834,"impl-Debug-for-Key"],[835,"impl-Display-for-Key"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
