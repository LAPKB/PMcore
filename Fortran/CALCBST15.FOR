C  CALCBST15.FOR                                           7/7/14

C  CALCBST15 HAS THE FOLLOWING CHANGES FROM CALCBST14:

C  1. IF THE PROGRAM BOMBS, THE MESSAGE THAT IS WRITTEN TO THE SCREEN
C  WILL NOW ALSO BE WRITTEN TO THE FILE ERRFIL = ERRORxxxx, WHERE xxxx
C  IS THE 4-DIGIT RUN NO. IN THIS WAY, IF THE PROGRAM IS BEING RUN USING
C  Pmetrics, THE Pmetrics PROGRAM CAN RESPOND APPROPRIATELY. NOTE THAT
C  ERRFIL IS PASSED TO ALL THE ROUTINES WHICH COULD WRITE TO IT
C  USING COMMON/ERR/ERRFIL.

C  2. THE MAXIMUM NO. OF OUTPUT EQUATIONS WILL BE CHANGED FROM 6 TO 7,
C  AND TO FACILITATE ANY FUTURE SUCH CHANGES, THIS NUMBER WILL BE SET
C  = MAXNUMEQ (SO ONLY THE PARAMETER STATEMENT WILL HAVE TO BE CHANGED
C  IN THE FUTURE). RATHER THAN PASS MAXNUMEQ TO ALL THE RELEVANT 
C  SUBROUTINES (AS IS DONE IN NPAG113.FOR AND IT2B110.FOR), THIS 
C  PROGRAM WILL JUST HAVE MAXNUMEQ SET IN A PARAMETER STATEMENT IN ALL
C  THESE ROUTINES. AND NOTE THAT IN THOSE SUBROUTINES, ANY 6
C  REFERRING TO THE MAX. NO. OF OUTPUT EQUATIONS WILL BE CHANGED TO
C  MAXNUMEQ.

C  3. IN SUBROUTINE GETPRED, THE DIMENSIONS OF 6 IN XSTORE AND XPRED
C  HAVE BEEN CHANGED TO 20, AS THEY SHOULD HAVE BEEN ALL ALONG (I.E.,
C  THIS REPRESENTS THE MAXIMUM NO. OF COMPARTMENTS ALLOWED).

C  4. THE TWO WRITE STATEMENTS TO FILE 25 ARE REMOVED, SINCE FILE 25 IS
C  NOT ACTIVE IN THIS PROGRAM.

C  5. IN SUBROUTINE GETPRED, COMMON/ERROR/ERRFIL IS ADDED; ERRFIL IS
C  DECLARED CHARACTER*20; AND FORMAT 111 AND SIG(.) ARE WRITTEN TO
C  ERRFIL JUST BEFORE THE PROGRAM STOPS IF THE PATIENT DATA FILE
C  HAS AN OBSERVATION TIME RESET ROW WITHOUT AN ACCOMPANYING DOSE
C  RESET ROW.

C  6. A BUG IS FIXED IN SUBROUTINE WSUMSQ.IN THE IF(ITARGET .EQ. 2)
C  PORTION OF THE CODE, AUC IS NO LONGER SET BACK TO 0 IF 
C  TPRED(I) = TNEXT ... SINCE AUCs ARE CUMULATIVE FROM TIME 0 IN THE
C  "PAST", AS OF BESTDOS118.FOR. THIS BUG EXISTED ONLY IN 
C  BESTDOS118.FOR, AND IS NOW FIXED IN BESTDOS119.FOR, WHICH IS THE
C  FIRST PROGRAM TO USE CALCBST15.FOR.

C-----------------------------------------------------------------------

C  CALCBST14.FOR                                           11/4/13

C  CALCBST14 HAS THE FOLLOWING CHANGE TO CALCBST13. "XLAM" IS REPLACED
C  BY "BIASWEIGHT". THIS IS DONE TO REMOVE ANY CONFUSION WITH LAMBDA,
C  WHICH IS A TERM USED IN THE ASSAY ERROR FUNCTION. 

C  CALCBST14.FOR IS A MODULE IN THE NEW BESTDOS117.FOR PROGRAM.

C-----------------------------------------------------------------------

C  CALCBST13.FOR                                           10/16/13

C  CALCBST13 HAS THE FOLLOWING CHANGES TO CALCBST12:

C  IF THE USER SELECTS ITARGET = 2 (SEE BELOW), THE AUCs NOW WILL BE
C  RELATIVE TO TIME 0 IN THE "FUTURE", AS OPPOSED TO TIME 0 IN THE
C  "PAST".

C  THIS REQUIRES CHANGES IN SUBROUTINE WSUMSQ. THE AUC AT TIME TNEXT
C  (WHICH IS THE BEGINNING TIME FOR THE "FUTURE") IS RESET BACK TO 0.

C  NOTE ALSO THAT TNEXT IS NOW INCLUDED IN COMMON/TOSUMSQ, SO THAT
C  IT CAN BE ADDED TO THE TIMES WHICH ARE ESTABLISHED BY ROUTINE
C  CALCTPRED2.

C  NOTE THAT THIS PROGRAM IS NOW LINKED WITH BESTDOS116.FOR.

C-----------------------------------------------------------------------

C  CALCBST12.FOR                                           10/6/13

C  CALCBST12 HAS THE FOLLOWING CHANGES FROM CALCBST11:

C  1. THERE ARE A NUMBER OF CHANGES IN SUBROUTINE WSUMSQ TO ALLOW FOR
C  THE NEW CASE THAT THE OBSERVED VALUES COULD BE TARGET AUCs, RATHER
C  THAN TARGET CONCENTRATIONS.

C  NOTE ALSO THAT THE NEW COMMON/TOSUMSQ PROVIDES INFO NEEDED BY
C  WSUMSQ FROM MAIN.

C  2. THE DIMENSION 71281 FOR YYPRED AND TPRED HAS BEEN CHANGED TO
C  72000 TO BE CONSISTENT WITH THTE DIMENSIONS NOW IN BESTDOS115.FOR.

C  3. NOTE THAT XLAM HAS BEEN MOVED IN FRONT OF THE INTEGER ARGUMENTS
C  IN COMMON/TOCALC TO AVOID A WARNING WHEN THIS PROGRAM IS COMPILED
C  WITH gfortran.

C  THIS MODULE IS PART OF THE NEW PROGRAM, BESTDOS115.FOR.

C-----------------------------------------------------------------------

C  CALCBST11.FOR                                           9/16/13

C  CALCBST11 HAS THE FOLLOWING CHANGES TO CALCBST10:

C  1. THE COST FUNCTION TO BE MINIMIZED IN SUBROUTINE CALCS IS CHANGED
C  TO NOW INCLUDE A BIAS TERM ALSO. THIS REQUIRES SEVERAL CHANGES IN
C  SUBROUTINES CALCS AND WSUMSQ. AND IT REQUIRES XLAM TO BE PROVIDED
C  TO CALCS VIA COMMON/TOCALC.

C  2. IN WHAT IS NOW THE FIRST PART OF THE COST FUNCTION, THE 
C  WEIGHT(.,.) ARRAY IS ELIMINATED. I.E., NOW THAT PART OF THE COST
C  FUNCTION WILL NO LONGER BE WEIGHTED BY THE ASSAY NOISE.

C  3. EXTRA/NEW VALUES ARE RETURNED TO MAIN VIA COMMON/PREDVAL. INSTEAD
C  OF JUST PREDMIN AND SUMM, NOW PREDMIN, EEXPSUMMIN, SUMMIN, AND 
C  BIASMIN ARE RETURNED.

C-----------------------------------------------------------------------

C  CALCBST10.FOR                                           3/26/13

C  CALCBST10 HAS THE FOLLOWING CHANGES FROM CALCBST9:

C  THE CODE IN CALCPRED/GETPRED IS NOW BASED IN idm1x14.f, RATHER THAN
C  idm1x6.f. THIS BRINGS THE BESTDOS106/CALCBST10 PROGRAM UP TO THE
C  LEVEL OF THE NPAG AND IT2B PROGRAMS, EXCEPT THAT THIS PROGRAM STILL
C  DOES NOT ACCOMMODATE STEADY STATE DOSE SETS --> THERE IS EXTRA UNUSED
C  CODE RELATED TO STEADY STATE DOSE SETS IN GETPRED (WHICH MAY BE USED
C  IN A LATER VERSION).

C  NOTE, IN PARTICULAR, THAT ALL DIMENSIONS OF 500 RELATED TO THE NO. OF
C  DOSES ARE NOW CHANGED TO 5000.

C-----------------------------------------------------------------------

C  CALCBST9.FOR                                            3/2/13

C  CALCBST9 HAS THE FOLLOWING CHANGES FROM CALCBST8:

C  1. COMMON/TOCALC, SUPPLIED TO SUBROUTINE CALCS, NOW INCLUDES AN
C  EXTRA ARGUMENT, NDD41, AND THIS ARGUMENT (WITH NAME CHANGED TO 
C  ND41) IS SUPPLIED TO SUBROUTINE WSUMSQ. IN THAT ROUTINE, IT IS USED
C  TO CHANGE THE DO I = 1,ND LOOP TO DO I = ND41+1,ND.

C  2. THIS MODULE IS A PART OF THE NEW PROGRAM, BESTDOS105.FOR.

C-----------------------------------------------------------------------

C  CALCBST8.FOR                                            2/13/13

C  CALCBST8 HAS THE FOLLOWING CHANGES FROM CALCBST7:

C  IT OPTIMIZES OVER ALL DOSES IN THE PATIENT FILE, BOLUSES AS WELL
C  AS IV RATES (CALCBST7 ASSUMED THAT THE BOLUSES WERE FIXED, AND ONLY
C  OPTIMIZED OVER THE IV RATES). CALCBST8 IS USED WITH THE NEW MAIN
C  PROGRAM, BESTDOS104.FOR.

C  NOTE THAT THE ONLY CHANGES REQUIRED ARE IN SUBROUTINE WSUMSQ.

C-----------------------------------------------------------------------

C  CALCBST7.FOR                                            6/17/11

C  CALCBST7 IS THE SAME AS CALCBST6 EXCEPT THAT ROUTINES USERANAL
C  AND JACOB HAVE BEEN REMOVED (SINCE THEY ARE NOW PROVIDED IN THE
C  NEW MODULE IDM1X6.FOR FOR THE BESTDOS101.FOR PROGRAM).

C-----------------------------------------------------------------------

C  CALCBST6.FOR                                            1/27/11

C  CALCBST6 HAS THE CHANGES FROM CALCBST5 (IN SUBROUTINE GETPRED) that
C  idm1x6.f HAS FROM idm1x3.f. THESE CHANGES, IN ADDITION TO CORRECTING
C  A COUPLE OF BUGS, MAKE THIS PROGRAM NOW COMPATIBLE WITH MODEL 
C  TEMPLATE FILE, TSTMULTH.FOR (UPDATED FROM TSTMULTG.FOR). THIS MODULE
C  IS LINKED FIRST WITH MAIN MODULE, BESTDOS8.FOR.

C-----------------------------------------------------------------------

C  CALCBST5.FOR							10/15/09

C  CALCBST5 HAS THE FOLLOWING CHANGES FROM CALCBST4:

C  1. IT IS A MODULE IN THE BESTDOS7.FOR PROGRAM. THIS PROGRAM IS 
C  AT THE "LEVEL" OF THE NPBIG15C.FOR PROGRAM. I.E., IT ALLOWS MULTIPLE
C  DRUGS AND MULTIPLE OUTPUTS.

C  2. CODE CHANGES, AND DIMENSION CHANGES OCCUR IN SUBROUTINES
C  WSUMSQ, CALCPRED, GETPRED, USERANAL (ONLY CHANGE IS THAT WARNING
C  STATEMENT IS SUPPRESSED) AND MAKEVEC.

C  NOTE THAT THE MODEL FILE CONSISTENT WITH THIS PROGRAM IS NOW
C  TSTMULTG.FOR. NOTE ALSO, THAT THE SHIFT MODULE COMPILED AND
C  LINKED WITH THIS PROGRAM IS NOW SHIFT5.F.

C-----------------------------------------------------------------------

C  CALCBST4.FOR							3/1/08

C  CALCBST4 HAS THE FOLLOWING CHANGES FROM CALCBST3:

C  1. IN SUBROUTINE CALCS, ANY CANDIDATE VECTOR OF DOSES WHICH INCLUDES
C     A NEGATIVE VALUE IS IMMEDIATELY REJECTED BY RETURNING A LARGE
C     (UNATTRACTIVE) VALUE FOR THE OBJECTIVE FUNCTION, EXPSUM. THIS
C     REQUIREMENT SHOULD HAVE BEEN IN PLACE ALL ALONG.

C  2. IT IS LINKED WITH THE BESTDOS6 PROGRAM.

C-----------------------------------------------------------------------

C  CALCBST3.FOR							11-14-02

C  CALCBST3 IS A MAJOR VARIATION TO CALCBST2.FOR. THE MAJOR CHANGE IS 
C  THAT THIS MODULE IS LINKED WITH BESTDOS4.FOR, WHEREAS CALCBST2 IS
C  LINKED WITH BESTDOS3.FOR. BESTDOS4.FOR/CALCBST3.FOR ALLOW GENERAL 
C  MODELS WHICH CAN BE DESCRIBED BY DIFFERENTIAL EQUATIONS AND OUTPUT 
C  EQUATION(S) CODED BY THE USER INTO SUBROUTINES DIFFEQ, OUTPUT, AND
C  SYMBOL OF FILE, npemdriv.f. I.E., THE MODEL IS NO LONGER LIMITED TO 
C  THE STANDARD 3-COMPARTMENT LINEAR MODEL.

C  THE MAJOR CODING CHANGES REQUIRED ARE AS FOLLOWS:

C  1. SUBROUTINES PARNAM AND PARNAM2 HAVE BEEN REMOVED - THEY ARE
C  NOT APPLICABLE NOW SINCE THE MENU 1/2 CODE HAS BEEN REMOVED 
C  FROM THIS PROGRAM.

C  2. SEVERAL DIMENSIONS HAVE BEEN CHANGED TO BE CONSISTENT ACROSS
C  ALL ROUTINES WHICH HAVE THE SAME COMMONS. E.G., TIM(150) HAS
C  BE CHANGED TO TIM(594) AND YO(150,4) HAS BEEN CHANGED TO
C  YO(594,6). BOTH OF THESE ARE IN COMMON/OBSER. 

C  3. M HAS BEEN REMOVED FROM THE ARGUMENT LIST OF SUBROUTINE GETPRED;
C  IT WILL BE PASSED VIA COMMON/SUM2

C  4. NVAR WAS REMOVED AS AN ARGUMENT TO SUBROUTINES WSUMSQ AND 
C  CALCPRED. IT WILL BE REPLACED BY NP (TOTAL NO. OF BOTH RANDOM
C  AND FIXED PARAMETERS IN CALCPRED).

C  5. SUBROUTINE CALCPRED WAS CHANGED TO BE LIKE MAIN OF idfix5f.f.

C  6. SUBROUTINE GETPRED WAS CHANGED TO BE ESSENTIALLY LIKE SUBROUTINE
C  FUNC OF MODULE, idfix5f.f.

C  7. SUBROUTINES ANAL3, CASE1,...,CASE4 HAVE BEEN REMOVED. 

C  8. SUBROUTINES USERANAL AND JACOB ARE PUT IN FROM idfix5f.f. 
C     SUBROUTINE MAKEVEC IS PUT IN FROM bignpaglap1.f. MAKEVEC IS
C     CALLED BELOW TO PUT INTO ONE VECTOR ALL THE PARAMETER VALUES 
C     (RANDOM AND FIXED) FOR EACH GRID POINT.

C  9. NEW COMMON/FROMBEST PROVIDES THE VALUES NEEDED IN THE CALL TO
C     NEW SUBROUTINE MAKEVEC (SEE ABOVE).

C 10. THE MODULES, npemdriv.f (EDITED AS DESIRED BY THE USER) AND 
C  vodtot.f, WILL ALSO BE LINKED WITH THIS MODULE TO BE PART OF THE
C  BESTDOS4.FOR PROGRAM. vodtot.f MUST BE LINKED SINCE SUBROUTINE DVODE 
C  IS CALLED BY SUBROUTINE USERANAL. 

C 11. SUBROUTINE OUTPUT HAS BEEN REMOVED SINCE IT WILL NOW BE A PART
C  OF MODULE, npemdriv.f, WHICH WILL BE EDITED BY THE USER.

C 12. THE MAXIMUM NO. OF GRID POINTS WHICH CAN BE USED (I.E., THE NO.
C  OF GRID POINTS READ IN FROM THE MATLAB FILE BY BESTDOS4.FOR) IS
C  CURRENTLY SET = MAXGRD = 5003.

C-----------------------------------------------------------------------

C  CALCBST2.FOR							9-29-01

C  CALCBST2 IS A SLIGHT EXTENSION TO CALCBEST. THE DIFFERENCE IS THAT,
C  FOR EACH GRID POINT IN THE INPUT DENSITY, THE ACHIEVED CONCENTRATIONS
C  FOR THE CURRENT BEST SET OF DOSES (I.E., THOSE GIVING THE MINIMUM
C  EXPSUM IN SUBROUTINE CALCS) ARE STORED IN COMMON/PREDVAL, WHICH WILL 
C  BE USED IN MAIN.

C-----------------------------------------------------------------------

C  CALCBEST.FOR							8-25-01

C  CALCBEST (SUBROUTINE CALCS) IS A VARIATION OF CALCS.FOR ... TO BE 
C  USED WITH BESTDOSE.FOR. BESTDOSE CALLS ELDERY (WHICH USES THE 
C  NELDER MEED ALGORITHM) TO FIND THE BEST SET OF NDOS DOSES (AT THE 
C  TIMES READ IN FROM THE PATIENT DATA FILE BY SUBROUTINE FILRED - 
C  THESE TIMES ARE PUT INTO COMMON BY FILRED) TO MINIMIZE THE EXPECTED 
C  WEIGHTED SUM OF SQUARES OF DIFFERENCES BETWEEN OBSERVED AND TARGET


C  CONCENTRATIONS (THE OBSERVATION TIMES AND TARGET CONCENTRATIONS ARE 
C  ALSO READ IN BY FILRED AND PUT INTO COMMONS TO BE USED BY SUBROUTINE 
C  CALCS). THE EXPECTED VALUE IS OVER THE PRIOR DENSITY (HAVING
C  PARAMETER VALUES AND CORRESPONDING DENSITIES).

C-----------------------------------------------------------------------

	SUBROUTINE CALCS(NDOS,DOSES,EXPSUM)

	PARAMETER(MAXGRD=5003, MAXDIM=25)
      PARAMETER(MAXNUMEQ=7)

	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION DOSES(5000),DENSITY(MAXGRD,MAXDIM+1),THETA(30),
     1 PRED(594,MAXNUMEQ),GRIDPRED(MAXGRD,594,MAXNUMEQ),
     2 YBAR(594,MAXNUMEQ),YOO(594,MAXNUMEQ),
     3 PREDMIN(MAXGRD,594,MAXNUMEQ),IRAN(32),VALFIX(20),PX(32)

	DATA EXPSUMMIN/1.D38/

	COMMON/PREDVAL/PREDMIN,EEXPSUMMIN,SUMMIN,BIASMIN
	COMMON/TOCALC/DENSITY,BIASWEIGHT,NOBSER,NUMEQT,NGRD,NVAR,NDD41
	COMMON/FROMBEST/NOFIX,IRAN,VALFIX

C  COMMON/PREVAL CONTAINS PREDMIN WHICH CONTAINS THE PREDICTED VALUES
C  FOR EACH GRID POINT FOR THE BEST SET OF DOSES SO FAR (I.E., THOSE
C  FOR WHICH THE EXPSUM IS MINIMUM SO FAR). ALSO, SUMM IS THE MINIMUM 
C  ACHIEVED VALUE OF EXPSUM SO FAR, AND CORRESPONDS TO PREDMIN VALUES.

C  COMMON/TOCALC CONTAINS THE FOLLOWING INFO:

C   1. NOBSER = NO. OF OBSERVED VALUE TIMES IN THE PATIENT DATA FILE.
C   2. NGRD = NO. OF GRID POINTS OVER WHICH THE ABOVE EXPECTED VALUE
C             IS TO BE CALCULATED.
C   3. NVAR = NO. OF DIMENSIONS IN THE RANDOM PARAMETER VECTOR.
C   4. DENSITY(I,J) = VALUE OF THE JTH RANDOM VARIABLE FOR GRID POINT I,
C                    J=1,NVAR; I=1,NGRD.
C      DENSITY(I,NVAR+1) = DISCRETE DENSITY ASSOCIATED WITH GRID PT. I.
C   5. BIASWEIGHT = WEIGHT ASSIGNED TO THE BIAS TERM IN CALCULATION OF
C      EXPSUM; 1 - BIASWEIGHT = WEIGHT ASSIGNED TO THE MEAN SQUARE ERROR
C      TERM IN THE CALCULATION.
C   6. NUMEQT = NO. OF OUTPUT EQUATIONS IN THE PATIENT DATA FILE.
C   7. NDD41 = NO. OF DOSE EVENTS IN THE "PAST".

C  COMMON/FROMBEST PROVIDES THE VALUES TO THIS ROUTINE WHICH ARE 
C  IN THE CALL TO MAKEVEC BELOW.


C  THIS ROUTINE, CALLED BY ELDERY, FINDS THE FUNCTIONAL VALUE, EXPSUM


C  FOR THE SUPPLIED VARIABLE VECTOR, DOSES(I),I=1,NDOS.

C    EXPSUM CONSISTS OF TWO TERMS:

C     THE FIRST IS THE EXPECTED SUM OF SQUARES OF DIFFERENCES BETWEEN
C     OBSERVED AND TARGET VALUES (THE OBSERVATION TIMES AND TARGET
C     VALUES ARE READ IN BY FILRED AND PUT INTO COMMONS
C     TO BE USED BY OTHER ROUTINES CALLED BY THIS ROUTINE). THE 
C     EXPECTED VALUE IS OVER THE PRIOR DENSITY (HAVING PARAMETER VALUES
C     AND CORRESPONDING DENSITIES). 

C     THE SECOND IS THE EXPECTED SUM OF SQUARES OF DIFFERENCES BETWEEN
C     THE MEAN RESPONSES AND THE TARGETS (THIS IS ALSO CALLED THE
C     BIAS TERM).



C  1ST CHECK THAT ALL THE ENTRIES IN DOSES ARE NON-NEGATIVE. IF ANY 

C  ISN'T, RETURN A LARGE POSITIVE VALUE (AN UNATTRACTIVE VALUE) FOR 
C  EXPSUM. THIS CHECK IS ADDED AS OF CALCBST4.FOR (IT SHOULD HAVE BEEN
C  IN PLACE ALL ALONG).

      DO I=1,NDOS
       IF(DOSES(I) .LT. 0.D0) THEN
        EXPSUM = 1.D38
        RETURN
       ENDIF
      END DO  


C  CALCULATE EXPSUM AS DEFINED ABOVE. 

C  INITIALIZE THE MEAN RESPONSE AT EACH OUTPUT TIME, FOR EACH
C  OUTPUT EQ. TO BE 0. AT THE END OF THE DO IGRD LOOP, YBAR(I,J)
C  WIL BE THE MEAN RESPONSE OVER ALL THE GRID PTS. FOR OBS. I 
C  AND OUTPUT EQ. J.



      DO I=1,NOBSER
       DO J=1,NUMEQT
        YBAR(I,J) = 0.D0
       END DO
      END DO


	SUM = 0.D0

	DO IGRD = 1,NGRD

C  STORE INTO THETA THE PARAMETER VALUES FOR GRID POINT IGRD.

	 DO J=1,NVAR
	  THETA(J) = DENSITY(IGRD,J)
	 END DO

C  ESTABLISH THE COMBINED RANDOM AND FIXED PARAMETER VALUES INTO
C  PX -- IN THE CORRECT ORDER AS INDICATED BY VECTOR IRAN. CALL
C  MAKEVEC TO DO THIS.
 
	CALL MAKEVEC(NVAR,NOFIX,IRAN,THETA,VALFIX,PX)

      ND41 = NDD41

C  MUST CHANGE THE NAME OF NDD41 TO ND41 SINCE IT IS SUPPLIED AS AN
C  ARGUMENT TO WSUMSQ.

	CALL WSUMSQ(NOBSER,PX,NDOS,DOSES,WSS,PRED,ND41,YOO)


C  STORE THE VALUES IN PRED INTO GRIDPRED IN CASE THE EXPSUM BELOW
C  TURNS OUT TO BE THE MINIMUM SUM SO FAR, IN WHICH CASE ALL THESE
C  PREDICTED VALUES WILL BE STORED INTO COMMON/PREDVAL FOR USE BY
C  MAIN.

      DO I=1,NOBSER
       DO J=1,NUMEQT
        GRIDPRED(IGRD,I,J) = PRED(I,J)
       END DO
      END DO

C  ADD DENSITY(IGRD,NVAR+1)*PRED(.,.) TO YBAR(.,.).

      DO I=1,NOBSER
       DO J=1,NUMEQT
        YBAR(I,J) = YBAR(I,J) + DENSITY(IGRD,NVAR+1)*PRED(I,J)
       END DO
      END DO


C  WSS RETURNS AS THE SUM OF SQUARES OF DIFFERENCES BETWEEN
C  THE TARGET AND OBSERVED VALUES GIVEN INPUT INFO.

	 SUM = SUM + DENSITY(IGRD,NVAR+1)*WSS


	END DO

C  THE ABOVE END DO IS FOR THE  DO IGRD = 1,NGRD  LOOP.


C  NOW YBAR(I,J) IS THE WEIGHTED MEAN RESPONSE FOR THE ITH TIME AND
C  THE JTH OUTPUT EQ. CALCULATE THE MEAN-SQUARE BIAS ERROR AS THE
C  SUM OF SQUARES OF DIFFERENCES BETWEEN YBAR(.,.) AND THE TRUE
C  OBSERVED VALUES, YO(I,J).

      BIAS = 0.D0
      
      DO I=1,NOBSER
       DO J=1,NUMEQT
        BIAS = BIAS + (YBAR(I,J) - YOO(I,J))**2.D0
       END DO
      END DO


	EXPSUM = (1.D0 - BIASWEIGHT)*SUM + BIASWEIGHT*BIAS

C  IF THIS EXPSUM IS LESS THAN THE CURRENT EXPSUMMIN THEN STORE THE 
C  VALUES IN GRIDPRED INTO PREDMIN WHICH IS PUT INTO COMMON/PREDVAL.
C  ALSO STORE THESE BEST VALUES OF EXPSUMMIN, SUMMIN, AND BIASMIN.

	IF(EXPSUM .LT. EXPSUMMIN) THEN
       EXPSUMMIN = EXPSUM
       SUMMIN = SUM
       BIASMIN = BIAS
	  DO IGRD = 1,NGRD
	   DO I=1,NOBSER
	    DO J=1,NUMEQT
	     PREDMIN(IGRD,I,J) = GRIDPRED(IGRD,I,J) 
	    END DO
	   END DO
	  END DO
	ENDIF

      EEXPSUMMIN = EXPSUMMIN



	RETURN
	END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE WSUMSQ(NOBSER,PX,NDOS,DOSES,WSS,PRED,ND41,YOO)

      IMPLICIT REAL*8(A-H,O-Z)

      PARAMETER(MAXNUMEQ=7)

      DIMENSION DOSES(5000),TIM(594),SIG(5000),YOO(594,MAXNUMEQ),
     1  RS(5000,34),YO(594,MAXNUMEQ),BS(5000,7),PRED(594,MAXNUMEQ),
     2  PX(32),YYPRED(72000,MAXNUMEQ),TPRED(72000)

        COMMON/OBSER/ TIM,SIG,RS,YO,BS
        COMMON/CNST/ N,ND,NI,NUP,NUIC,NP
        COMMON/CNST2/ NPL,NUMEQT,NDRUG,NADD
        COMMON/TOSUMSQ/ITARGET,NVAR,NOFIX,NDIM,IDELTA,TNEXT

C  NOTE THAT COMMON/TOSUMSQ VALUES ARE PROVIDED TO THIS ROUTINE VIA
C  MAIN.


C  THIS ROUTINE IS CALLED BY SUBROUTINE CALCS TO CALCULATE WSS, WHICH IS
C  THE SUM OF SQUARES OF DIFFERENCES BETWEEN TARGET AND ACTUAL VALUES,
C  GIVEN PARAMETER VALUES (RANDOM AND FIXED) IN PX, AND THE DOSE AMOUNTS
C  IN THE DOSES VECTOR. 

C  FIRST STORE THE DOSES INTO RS. NOTE THAT THOSE DOSES WHICH ARE
C  NOT OPTIMIZED OVER CONTINUE TO BE THEIR ORGINAL VALUES. AND NOTE THAT
C  THE ONLY DOSES OPTIMIZED OVER ARE THE NON-0 ONES THAT OCCUR IN THE
C  "FUTURE" (I.E, FROM DOSE EVENT ND41+1 TO ND).

      IDOS = 0

      DO I = ND41+1,ND
       DO J = 1,NDRUG
        IF(RS(I,2*J-1) .GT. 0.D0) THEN
         IDOS = IDOS + 1
         RS(I,2*J-1) = DOSES(IDOS)
        ENDIF
        IF(RS(I,2*J) .GT. 0.D0) THEN
         IDOS = IDOS + 1
         RS(I,2*J) = DOSES(IDOS)
        ENDIF        
       END DO
      END DO

C  AS OF BESTDOS104.FOR/CALCBST8.FOR, MUST REESTABLISH THE BOLUS
C  VALUES HERE SINCE THEY WERE ASSIGNED THEIR VALUES FROM THE CALL TO
C  FILRED WHICH OCCURRED BEFORE ELDERY WAS CALLED. BUT NOW ELDERY CAN
C  OPTIMIZE OVER BOLUS VALUES ALSO, WHICH MEANS THAT IT COULD CHANGE
C  THE BOLUS VALUES, AND SO THEY MUST BE REESTABLISHED HERE.

      DO I=1,ND
       DO J=1,NDRUG
        BS(I,J)=RS(I,2*J)
       END DO
      END DO


C  NOTE THAT YO(I,J); I=1,NOBSER; J=1,NUMEQT ARE THE "TARGET" OBSERVED 
C  VALUES WHICH WERE READ FROM THE PATIENT DATA FILE BY SUBROUTINE 
C  FILRED (AND PLACED INTO COMMON/OBSER).

C  PRIOR TO CALCBST12.FOR, THESE Y0(.,.) VALUES WERE ALWAYS 
C  CONCENTRATIONS. BUT AS OF CALCBST12 ...
C  IF ITARGET = 1, THESE OBSERVED VALUES ARE CONCENTRATIONS;
C  IF ITARGET = 2, THESE OBSERVED VALUES ARE AUCs.

C  SO IF ITARGET = 1, CALL CALCPRED TO GET PRED(.,.), JUST AS IN
C  CALCBST11.FOR AND PRIOR PROGRAMS.

C  BUT IF ITARGET = 2, CALL CALCTPRED2 TO GET A RICH SUPPLY OF PREDICTED
C  TIMES OVER WHICH CONCENTRATIONS CAN BE FOUND, AND FROM WHICH ACCURATE
C  AUCs CAN  BE CALCULATED (SEE BELOW).

      IF(ITARGET .EQ. 1) THEN

C  CALL CALCPRED, WHICH CALCULATES THE ACTUAL PREDICTED VALUES ASSUMING
C  THE DOSE AMOUNTS, DOSES(I),I=1,NDOS (WHICH OCCUR AT THE TIMES WHICH 
C  WERE STORED INTO SIG(I),I=1,ND IN COMMON/OBSER BY SUBROUTINE FILRED
C  PREVIOUSLY), AND THE PARAMETER VALUES STORED INTO PX.


	 CALL CALCPRED(PX,PRED)

      ENDIF


      IF(ITARGET .EQ. 2) THEN

C  NOTE THAT THE SUM OF SQUARES, WSS, WILL BE CALCULATED OVER THE
C  NOBSER x NUMEQT OBSERVED VALUES, WHICH OCCUR AT TIMES, 
C  TIM(I),I=1,NOBSER. THESE OBSERVED VALUES ARE TARGET AUCs. IN ORDER
C  TO CALCULATE ACCURATE AUCs, USING THE TRAPEZOIDAL RULE, IT IS
C  NECESSARY TO HAVE A RELATIVELY RICH SET OF CONCENTRATIONS (I.E., THE
C  TRAPEZOIDAL RULE GIVES AN ACCURATE ESTIMATE OF THE TRUE INTEGRAL AS
C  LONG AS THE DELTA BETWEEN 2 CONSECUTIVE CONCENTRATION TIMES IS SMALL,
C  SO THAT THE CURVE RUNNING THROUGH THESE CONCENTRATIONS CAN BE 
C  REASONABLY WELL APPROXIMATED BY A STRAIGHT LINE).

C  CALL SUBROUTINE CALCTPRED2 TO ESTABLISH THE RICH SET OF TIMES 
C  TO BE USED TO CALCULATE THE AUCs.

      CALL CALCTPRED2(NOBSER,TNEXT,IDELTA,NUMT,TPRED)



C  CALL SUBROUTINE IDCALCYY FOR THE PARAMETERS IN PX.
C  THIS IS A VERSION OF THE ID PROGRAM WHICH CALCULATES THE PREDICTED
C  VALUES OF Y(I,J) (OUTPUT CONCENTRATION OF THE JTH OUTPUT EQ. AT TIME
C  TPRED(I),I=1,NUMT), ASSUMING THE GIVEN GRID PT. NOTE THAT IN 
C  DCALCYY, THE PREDICTED VALUES ARE SUPPLIED IN TPRED, RATHER THAN
C  INPUT VIA COMMON/OBSER FROM THE PATIENT'S DATA FILE. ALSO, THE NO. 
C  OF OBSERVED TIMES IS NUMT, RATHER THAN M WHICH IS SUPPLIED VIA
C  COMMON/SUM2. AND NOTE THAT NUMT AND TPRED(.) ARE FOUND FROM THE CALL
C  TO CALCTPRED2 ABOVE.

	CALL IDCALCYY(NVAR+NOFIX,NDIM,PX,TPRED,NUMT,YYPRED,NUMEQT)

       DO J = 1,NUMEQT

C  INEXTTIM WILL BE THE INDEX OF THE NEXT OBSERVATION TIME. INITIALIZE
C  IT TO BE 1.

        INEXTTIM = 1

C  THE AUC STARTS AT 0 AT TPRED(1), WHICH WILL BE 0. THEN IT WILL
C  BE UPDATED FOR EACH INTERVAL, USING THE TRAPEZOIDAL RULE.

        DO I = 1,NUMT

         IF(I .EQ. 1) AUC = 0.D0

C  AS OF BESTDOS116.FOR, AUCs IN THE "FUTURE" ARE RELATIVE TO THE
C  BEGINNING OF THE "FUTURE", WHICH OCCURS AT TNEXT. SO SET AUC BACK
C  TO 0 AT TIME TNEXT.

C  NO! AS OF BESTDOS118.FOR, THE AUCs WILL BE CUMULATIVE FROM TIME 0 IN
C  THE "PAST". SO COMMENT OUT THE CODE BELOW TO CALL THESAME, AND 
C  COMMENT OUT THE RESETTING OF AUC IF ISAME = 1.

C         CALL THESAME(TPRED(I),TNEXT,ISAME)

C  IF ISAME RETURNS FROM SUBROUTINE THESAME AS 1, TPRED(I) = TNEXT,
C  OR AT LEAST, THEY ARE WITHIN 1.D-10 OF EACH OTHER. IN THIS CASE,
C  SET AUC BACK TO 0.

         IF(I .GT. 1) THEN
          DELTA = TPRED(I) - TPRED(I-1)
          AUC = AUC + (YYPRED(I,J) + YYPRED(I-1,J))/2.D0 * DELTA
C         IF(ISAME .EQ. 1) AUC = 0
         ENDIF

C  IF THE CURRENT TPRED(I) IS THE NEXT OBSERVATION TIME, THEN STORE THE
C  AUC INTO PRED(I,J).

         CALL THESAME(TPRED(I),TIM(INEXTTIM),ISAME)

C  IF ISAME RETURNS FROM SUBROUTINE THESAME AS 1, TPRED(I) = THE NEXT
C  OBSERVATION TIME, TIM(INEXTTIM), OR AT LEAST, THEY ARE WITHIN 1.D-10
C  OF EACH OTHER. IN THIS CASE, STORE THE AUC INTO PRED(INEXTTIM,J).

         IF(ISAME .EQ. 1) THEN
          PRED(INEXTTIM,J) = AUC
          INEXTTIM = INEXTTIM + 1
         END IF
         
        END DO
C  THE ABOVE END DO IS FOR THE  DO I = 1,NUMT  LOOP.

       END DO
C  THE ABOVE END DO IS FOR THE  DO J = 1,NUMEQT  LOOP.


      ENDIF 
C  THE ABOVE ENDIF IS FOR THE  IF(ITARGET .EQ. 2)  CONDITION.


C  NOW CALCULATE WSS.

C  NOTE THAT YO(I,J),I=1,NOBSER; J=1,NUMEQT ARE THE "TARGET" OBSERVED 
C  VALUES WHICH WERE READ FROM THE PATIENT DATA FILE BY SUBROUTINE 
C  FILRED (AND PLACED INTO COMMON/OBSER). MUST CHECK YO VALUES FOR -99 

C  (MISSING VALUE CODE), AND IGNORE ANY IN THE FOLLOWING LOOPS.
C  ALSO NOTE THAT YOO(.,.) IS SET = YO(.,.) IN THE LOOPS BELOW SO YOO
C  CAN BE PASSED BACK TO SUBROUTINE CALCS.


	SUM = 0.D0
	DO I=1,NOBSER
	 DO J=1,NUMEQT
	  IF(YO(I,J) .NE. -99)
     1     SUM = SUM + (PRED(I,J) - YO(I,J))**2.D0
        YOO(I,J) = YO(I,J)
	 END DO
	END DO

	WSS = SUM



	RETURN
	END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	SUBROUTINE CALCPRED(PX,PRED)

C  THIS ROUTINE IS CALLED BY SUBROUTINE WSUMSQ TO CALCULATE PRED, THE
C  ARRAY OF PREDICTED CONCENTRATIONS, BASED ON THE DOSES, DOSE TIMES, 
C  AND OBSERVATION TIMES IN COMMON/OBSER, AND THE PARAMETER VECTOR 
C  PX, WHICH INCLUDES BOTH RANDOM AND FIXED VALUES.

C  INPUT ARE:

C  PX = VECTOR OF RANDOM AND FIXED PARAMETER VALUES.

C  INFORMATION FROM A SUBJECT DATA FILE WHOSE INFO IS PASSED TO THE 
C  ROUTINES IN THIS MODULE VIA COMMONS /OBSER/, /CNST/, /CNST2/, AND 
C  /SUM2/.


C  OUTPUT IS:

C  PRED(I,J),I=1,M; J=1,NUMEQT THE PREDICTED CONCENTRATION VALUES 
C  (SEE ABOVE).

C-----------------------------------------------------------------------
C  NOTE: CALCPRED IS A VARIATION OF THE MAIN ROUTINE IN idm1x3.f.

	IMPLICIT REAL*8(A-H,O-Z)

      PARAMETER(MAXNUMEQ=7)

        DIMENSION PX(32),P(32),PRED(594,MAXNUMEQ)
        COMMON/CNST/ N,ND,NI,NUP,NUIC,NP
        COMMON/PARAMD/ P

C*****INITIALIZE PROGRAM*****

        CALL SYMBOL

C  THE ABOVE CALL OBTAINS N AND NP AND NTLAG VIA COMMON/CNST ...

C  PUT MODEL PARAMETER VALUES (RANDOM AND FIXED) INTO P.

        DO I=1,NP 
         P(I) = PX(I)
        END DO

        CALL GETPRED(PRED)

        RETURN
        END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE GETPRED(PRED)

C  PROGRAM TO DETERMINE PRED(I) = PREDICTED CONCENTRATION AT TIME I, 
C  GIVEN P IN COMMON/PARAMD.

C  NOTE THAT THIS ROUTINE IS BASED ON idm1x14.f IN THE NPAG PROGRAM.

      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/BOLUSCOMP/NBCOMP
      COMMON/SUM2/ M,NPNL
      COMMON/OBSER/ TIM,SIG,RS,YO,BS
      COMMON/CNST/ N,ND,NI,NUP,NUIC,NP
      COMMON/INPUT/ R,B
      COMMON/PARAMD/ P
      COMMON/CNST2/ NPL,NOS,NDRUG,NADD
      COMMON/STATE/ X
      COMMON/ERROR/ERRFIL
      PARAMETER(MAXNUMEQ=7)

C  COMMON/ERR/ IS SUPPLIED TO ALL THE ROUTINES WHICH COULD WRITE TO
C  ERRFIL.


      DIMENSION X(20),P(32),TIM(594),SIG(5000),SIGO(5000),R(37),
     1 RS(5000,34),RSO(5000,34),YT(MAXNUMEQ),YO(594,MAXNUMEQ),
     2 BS(5000,7),Y(594,MAXNUMEQ),B(20),NBCOMP(7),
     3 PRED(594,MAXNUMEQ),FA(7),TLAG(7),XSTORE(100,20),XPRED(20)

      CHARACTER ERRFIL*20

 
C  COMMON/ERROR/ IS SUPPLIED TO ALL THE ROUTINES WHICH COULD WRITE TO
C  ERRFIL. AND ERRFIL IS MADE CHARACTER *20 ABOVE.

C  NOTE THAT AS OF CALCBST15.FOR, THE DIMENSIONS OF 6 IN XSTORE AND
C  XPRED HAVE BEEN CHANGED TO 20, WHICH IS WHAT THEY SHOULD HAVE BEEN
C  ALL ALONG (I.E., THE SAME AS FOR X).

C  NOTE THAT THE DIMENSIONS RELATED TO THE NO. OF OUTPUT EQS. IN
C  YO, YT, Y AND PRED ARE CHANGED TO MAXNUMEQ (FROM 6). NUMEQT COULD NOT
C  BE USED BECAUSE THESE ARRAYS WERE NOT PASSED TO THIS ROUTINE AS
C  DUMMY ARGUMENTS.

C  NOTE THAT "7" IN THE ABOVE ARRAYS INDICATE THE NO. OF DRUGS ALLOWED.

C  R(7) CHANGED TO R(20) <-- No. of 'rate inputs'
C  B(3) CHANGED TO B(20) <-- No. of different bolus inputs
C  CHANGED X(3) TO X(20) <-- No. of compartments
C  IC(10) CHANGED TO IC(20) <-- Initial conditions in compartments;
C 		should have been changed to 20 previously (like X,B).
C  NBCOMP(10) CHANGED TO NBCOMP(20) <-- Same remarks as for IC.
C  P(10) CHANGED TO P(32) <-- No. of parameters


C*****ODE CONSTANTS AND INITIALIZATION*****

      KNS=1
      KNT=1

C  NOTE THAT KNT IS THE RUNNING INDEX OF THE NEXT OBSERVATION TIME,
C  AND       KNS IS THE RUNNING INDEX OF THE NEXT DOSAGE TIME.

      T=0.0D0

C  INITIALIZE ISKIPBOL = 0. SEE CODE BELOW. IT IS ONLY NEEDED FOR A
C  STEADY STATE DOSE SET WHICH HAS BOLUS DOSES.

      ISKIPBOL = 0



      DO I = 1,NDRUG
       R(2*I-1) = 0.D0
      END DO

c  AS OF idm1x7.f, instead of R(1) = 0, the code has been changed to 
c  set R(2*I-1) = 0, for I = 1,NDRUG. I.E., All IV rates for all NDRUG
c  drugs are initialized to be 0 ... in case the 1st obs. time is 0,
c  which means that OUTPUT is called before the R(I) are set below.


C  CALL SUBROUTINE GETFA IN npemdriv.f (THE FIRST TEMPLATE FILE TO 
C  INCLUDE GETFA IS TSTMULTG.FOR) TO OBTAIN THE VALUE OF FA FOR EACH
C  OF THE NDRUG DRUGS.

C  AS OF idm1x13.f, BEFORE CALLING GETFA, MUST SET
C  THE R(.) IN CASE ANY OF THE FA(.) ARE FUNCTIONS OF THE 
C  COVARIATES WHICH ARE ESTABLISHED FROM THE R(.) VALUES IN
C  GETFA.
 
      DO I=1,NI
       R(I)=RS(KNS,I)
      END DO

	 CALL GETFA(FA)


C  NOTE THAT NBCOMP(I),I=1,NDRUG WAS SET IN SUBROUTINE SYMBOL AND

C  PASSED TO THIS ROUTINE VIA COMMON/BOLUSCOMP.


C  As of idm1x12.f, the code to save ND0, SIGO, RSO, is moved to before
c  the IF(N .EQ. 0) GO TO 75  statement. The reason is that before this
c  routine returns, ND, SIG, and RS are reset back to these values,
c  even if N = 0, and so they must be established at this time.

C  AS OF idm1x9.f, SAVE ND, SIG, AND RS WHETHER OR NOT NTL = 1, SINCE
C  IF THERE ARE STEADY STATE DOSE SETS, THE FIRST SIG(.) VALUE IN EACH
C  SET WILL BE CHANGED TO BE 0 BELOW.

	 NDO = ND
	 DO I=1,ND
	  SIGO(I) = SIG(I)
	  DO J=1,NI
	   RSO(I,J) = RS(I,J)
	  END DO
	 END DO


C  IF N = 0, THE OUTPUT EQUATION(S) FOR Y ARE CODED EXPLICITLY INTO
C  SUBROUTINE OUTPUT, AND NO D.E. SOLUTIONS (VIA USERANAL/DIFFEQ) ARE

C  TO BE USED. IN THIS CASE, SKIP THE CODE REGARDING INITIAL CONDITIONS
C  OF THE COMPARTMENTS, SINCE THEY ARE IRRELEVANT (I.E., THE COMPARTMENT
C  AMOUNTS DON'T NEED TO BE INITIALIZED SINCE THEY WON'T BE UPDATED BY
C  INTEGRATING D.E.'S). IN FACT, COULD PROBABLY SKIP TIMELAGS TOO, 
C  SINCE THEY CHANGE THE TIME THAT BOLUS DOSES ARE GIVEN, AND THIS
C  THEORETICALLY ONLY AFFECTS COMPARTMENT AMOUNTS (WHICH ARE NOT USED

C  IF N = 0), BUT JUST SKIP INITIAL CONDITIONS FOR NOW.

        IF(N .EQ. 0) GO TO 75


C  CALL SUBROUTINE GETIX IN npemdriv.f (THE FIRST TEMPLATE FILE TO 
C  INCLUDE GETIX IS TSTMULTG.FOR) TO OBTAIN THE VALUE OF X (THE INITIAL
C  COMPARTMENT AMOUNT) FOR EACH OF THE N COMPARTMENTS.

	 CALL GETIX(N,X)



C  CALL SUBROUTINE GETTLAG IN npemdriv.f (THE FIRST TEMPLATE FILE TO 
C  INCLUDE GETTLAG IS TSTMULTG.FOR) TO OBTAIN THE VALUE OF THE TIMELAG
C  FOR EACH OF THE NDRUG DRUGS.

   75	 CALL GETTLAG(TLAG)

C  IF ANY TLAG(.) VALUES RETURN AS .NE. 0, THEN, CALL SUBROUTINE SHIFT
C  TO ADJUST THE DOSAGE REGIMEN APPROPRIATELY.

      NTL = 0
      DO ID = 1,NDRUG
       IF(TLAG(ID) .NE. 0) NTL = 1
      END DO

	IF(NTL .EQ. 1) THEN

C  STORE INCOMING VALUES IN ND, SIG, AND RS (WHICH CONTAINS BS VALUES)
C  SINCE THEY WILL BE CHANGED IN THE CALL TO SUBROUTINE SHIFT, WHICH 
C  "SHIFTS" THE DOSAGE REGIMEN MATRIX TO ACCOUNT FOR THE TIMELAG 
C  PARAMETER(S), TLAG(I). AT THE END OF THIS ROUTINE, THE VALUES IN ND, 
C  SIG, AND RS WILL BE RESET TO THEIR INCOMING VALUES - TO BE READY FOR 
C  THE NEXT CALL TO THIS ROUTINE WITH POSSIBLY DIFFERENT VALUES FOR 
C  TLAG(I).


	 CALL SHIFT(TLAG,ND,SIG,NDRUG,NADD,RS)


C  ESTABLISH THE VALUES IN EACH DRUG'S PO COLUMN TO THE CORRESPONDING
C  COLUMN IN ARRAY BS.

      DO I=1,ND
       DO J=1,NDRUG
        BS(I,J)=RS(I,2*J)
       END DO
      END DO


	ENDIF

C  THE ABOVE ENDIF IS FOR THE  IF(NTL .EQ. 1)  CONDITION.

        IF(TIM(KNT).GE.SIG(KNS)) GO TO 12
        IF(TIM(KNT).NE.0.0D0) GO TO 45

C  THE ONLY WAY THE FOLLOWING CALL TO OUTPUT CAN OCCUR IS IF TIM(KNT)
C  = 0 --> OBTAIN YT = OUTPUT VALUE(S) AT TIME 0.0.

        CALL OUTPUT(0.D0,YT)
        DO 2000 I=1,NOS
2000    Y(KNT,I)=YT(I)
        KNT=KNT+1
        GO TO 45

12      IF(TIM(KNT).GT.SIG(KNS)) GO TO 13
        IF(TIM(KNT).NE.0.0D0) GO TO 45

C  THE ONLY WAY THE FOLLOWING CALL TO OUTPUT CAN OCCUR IS IF TIM(KNT)
C  = 0 --> OBTAIN YT = OUTPUT VALUE(S) AT TIME 0.0.

        CALL OUTPUT(0.D0,YT)
        DO 2005 I=1,NOS
2005    Y(KNT,I)=YT(I)
        KNT=KNT+1

13      IF(SIG(KNS) .GT. 0.0D0) GO TO 45

C  CHECK TO SEE IF SIG(KNS) < 0. IF SO, IT MEANS THAT 100 STEADY STATE
C  DOSES SHOULD NOW BE APPLIED WITH AN INTERDOSE INTERVAL EQUAL TO
C  -SIG(KNS).

      ISTEADY = 0

      IF(SIG(KNS) .LT. 0.D0) THEN

       ISTEADY = 1
       NSET = 1

C  NOTE THAT ISTEADY = 1 TELLS THE PROGRAM BELOW TO PROCEED AS IF THE
C  DOSE TIME IS 0, AND START INTEGRATING THROUGH THE SET OF 100 
C  DOSE SETS, ALL OF WHICH OCCUR BEFORE THE NEXT OBSERVATION TIME ...
C  BUT PAUSE AFTER THE END OF THE 5TH DOSE SET (NSET IS THE RUNNING NO.
C  OF THE CURRENT DOSE SETS THAT HAVE BEEN RUN) AND CALL SUBROUTINE
C  PREDLAST3 TO PREDICT THE STEADY STATE COMPARTMENT AMOUNTS AFTER THE
C  100 DOSE SETS (NOTE THAT THE COMPARTMENT AMOUNTS WILL HAVE TO BE
C  STORED AT THE END OF EACH OF THE STEADY STATE DOSE SETS AS THE LOGIC
C  OF PREDLAST3 REQUIRES). 

C  IF "CONVERGENCE" IS ACHIEVED AT THAT POINT, ASSIGN THE COMPARTMENT 
C  AMOUNTS TO BE THE PREDICTED AMOUNTS, AND ASSIGN KNS TO BE WHAT IT IS
C  WHEN THESE STEADY STATE DOSE SETS HAVE FINISHED. NOTE THAT THE END OF
C  THE 100TH DOSE SET WILL BE AT TIME 100*(-SIG(KNS)), SO KNS WILL BE 
C  THE INDEX OF THE FIRST DOSE EVENT WHICH OCCURS AFTER THIS TIME.

C  IF "CONVERGENCE" IS NOT ACHIEVED, CONTINUE APPLYING THE LOGIC OF
C  PREDLAST3 UNTIL IT IS ACHIEVED, OR UNTIL THE 100 DOSE SETS ARE ALL
C  INTEGRATED THROUGH, WHICHEVER COMES FIRST.

       DOSEINT = -SIG(KNS)

C  RESET SIG(KNS) TO BE 0 SINCE THIS DOSE EVENT REPRESENTS THE START
C  OF 100 DOSE SETS THAT BEGIN AT TIME 0.


       SIG(KNS) = 0

      ENDIF

C  THE ABOVE ENDIF IS FOR THE  IF(SIG(KNS) .LT. 0.D0)  CONDITION.


      DO I=1,NI
       R(I)=RS(KNS,I)
      END DO

      IF(NDRUG .EQ. 0) GO TO 81

C  AS OF idm1x13.f: MUST CALL GETFA BEFORE EVERY TIME THAT
C  FA(.) ARE USED IN CASE THE EQUATION(S) FOR THE FA(.) ARE BASED
C  ON THE COVARIATES, WHICH CAN CHANGE DOSE TO DOSE.

	 CALL GETFA(FA)


      IF(N .EQ. 0) GO TO 120

       DO I=1,NDRUG
       X(NBCOMP(I))=X(NBCOMP(I))+BS(KNS,I)*FA(I)
      END DO

C  NOTE THAT FA(I) IS THE FRACTION OF DRUG AVAILABLE FROM A BOLUS INPUT
C  FOR DRUG I INTO ITS ABSORPTIVE COMPARTMENT.

      GO TO 81

120   DO I=1,NDRUG
       B(I)=BS(KNS,I)*FA(I)
      END DO

81    KNS = KNS+1


C*****INTEGRATION OF EQUATIONS*****
  

C  DETERMINE IF, OBSER(ID=0), OR DOSE(ID=1), OR BOTH(ID=2).

45    IF(KNS .GT. ND) GO TO 15


C CODE CHANGE BELOW FOR idm1x8.f.

      IF(TIM(KNT) .EQ. 0.D0 .AND. KNT .GT. 1) THEN

C  AS OF idm1x7.f, A TIME RESET NO LONGER REQUIRES ALL INITIAL
C  COMPARTMENT AMOUNTS TO BE RESET TO 0. THIS IS BECAUSE A TIME RESET
C  NO LONGER HAS TO MEAN THAT AN "INFINITE" AMOUNT OF TIME HAS OCCURRED
C  WITH NO DOSING; IT CAN ALSO NOW MEAN THAT AN "INFINITE" AMOUNT OF 
C  TIME HAS OCCURRED WITH UNKNOWN DOSING (IN THIS CASE, SUBROUTINE
C  GETIX WILL BE CALLED BELOW TO ESTABLISH INITIAL CONDITIONS FOR THIS
C  TIME PERIOD). 

C  ADVANCE KNS TO THE NEXT VALUE THAT HAS SIG(KNS) .LE. 0. I.E., ONCE
C  TIMN(KNT) = 0, IT MEANS THAT WE ARE DONE WITH THE OUTPUT OBS.
C  TIMES IN THE PREVIOUS SECTION --> THERE IS NO POINT IN CONTINUING
C  TO INTEGRATE TILL THE END OF THE DOSES IN THE PREVIOUS SECTION
C  (IF THERE ARE ANY).

      DO IKNS = KNS,ND
       IF(SIG(IKNS) .LE. 0.D0) GO TO 110
      END DO


C  TO GET HERE MEANS THAT NO VALUE IN SIG(.) FROM KNS TO ND HAS A 
C  VALUE .LE. 0, AND THIS IS AN ERROR. IT MEANS THAT THE PATIENT DATA
C  FILE HAS AN OBSERVATION TIME RESET ROW WITHOUT AN ACCOMPANYING
C  DOSE RESET ROW. TELL THE USER AND STOP.

      WRITE(*,111) ND,KNS,SIG(KNS)
111   FORMAT(//' IN SUBROUTINE GETPRED, THE CURRENT SUBJECT HAS AN'/
     1' OBSERVATION TIME RESET ROW WITHOUT AN ACCOMPANYING DOSE'/
     2' RESET ROW. THE PROGRAM NOW STOPS. '//
     3' REVIEW YOUR PATIENT FILES AND CORRECT THE ERROR.'//
     4' NOTE THAT THE ',I4,' DOSE TIMES (POSSIBLY ALTERED BY TIMELAGS'/
     5' ARE THE FOLLOWING (AND THERE IS NO TIME .LE. 0 AFTER TIME'/
     6' NO. ',I4,' WHICH HAS CORRESPONDING TIME ',F15.4,'):')


      DO I = 1,ND
       WRITE(*,*) SIG(I)
      END DO

        OPEN(47,FILE=ERRFIL)
         WRITE(47,111) ND,KNS,SIG(KNS)
         DO I = 1,ND
          WRITE(47,*) SIG(I)
         END DO
        CLOSE(47)


      CALL PAUSE
      STOP


  110 KNS = IKNS


C  THERE ARE TWO POSSIBILITES AT THIS POINT, EITHER SIG(KNS) = 0
C  OR SIG(KNS) < 0. 

C  IF SIG(KNS) = 0, THIS REPRESENTS A TIME RESET (T WILL BE SET = 0
C  BELOW) WITH A SINGLE DOSE LINE TO START. IN THIS CASE, CALL GETIX
C  AGAIN (JUST AS WAS DONE NEAR THE TOP OF THIS ROUTINE) TO OBTAIN
C  INITIAL COMPARTMENT AMOUNTS. NOTE THAT BY DEFAULT, IN GETIX, ALL
C  COMPARTMENT AMOUNTS ARE SET = 0 (WHICH WOULD BE THE CASE IF IN THE 
C  LONG TIME PERIOD BETWEEN THE LAST SET OF DOSES AND THIS NEW
C  BEGINNING, NO DOSES HAVE BEEN GIVEN). BUT THE USER MAY ALSO HAVE
C  CODED INTO GETIX EQUATIONS THAT SET ONE OR MORE OF THE X(I) TO
C  FUNCTIONS OF COVARIATE AND PARAMETER VALUES (WHICH WOULD BE THE
C  SITUATION IF AN UNKNOWN DOSING REGIMEN HAS TAKEN PLACE BUT IT
C  DOESN'T MATTER WHAT IT WAS BECAUSE THE PATIENT COMES TO A LAB AND
C  SIMPLY HAS HIS COMPARTMENT VALUES ESTABLISHED BEFORE CONTINUING 
C  WITH THE OTHER VALUES IN HIS PATIENT FILE). 

C  IF SIG(KNS) < 0, THIS REPRESENTS A TIME RESET WITH A STEADY STATE
C  SET OF 100 DOSES ABOUT TO BEGIN. IN THIS CASE, WE ASSUME THAT THE
C  PATIENT IS ABOUT TO GET 100 SETS OF DOSES SO THAT HIS COMPARTMENT
C  AMOUNTS WILL ACHIEVE STEADY STATE VALUES. THESE STEADY STATE VALUES
C  WILL BE ESTIMATED IN THE BLOCK OF CODE BELOW THAT STARTS WITH 
C  IF(ISTEADY .EQ. 1). IN THIS CASE, WE WILL STILL CALL GETIX TO 
C  MAKE SURE THAT ANY RESIDUAL COMPARTMENT AMOUNTS FROM A PREVIOUS
C  SET OF DOSES IS ZEROED OUT (OR SET = VALUES AS DETERMINED BY
C  SUBROUTINE GETIX).

C  AS OF idm1x14.f, BEFORE CALLING GETIX, MUST SET
C  THE R(.) IN CASE ANY OF THE INITIAL CONDITIONS FOR THE X(.)
C  ARE FUNCTIONS OF THE COVARIATES WHICH ARE ESTABLISHED FROM THE 
C  R(.) VALUES IN GETFA.
 
      DO I=1,NI
       R(I)=RS(KNS,I)
      END DO



        CALL GETIX(N,X)
		
C  MUST ALSO RESET T = 0 SINCE THE INTEGRATION WILL AGAIN START FROM 
C  TIME 0.

       T = 0.D0

C  IF SIG(KNS) .LT. 0, THIS IS NOT ONLY A TIME RESET, IT IS THE
C  BEGINNING OF A STEADY STATE DOSE SET. IN THIS CASE, APPLY 100 
C  STEADY STATE DOSES WITH AN INTERDOSE INTERVAL EQUAL TO -SIG(KNS).

      ISTEADY = 0

      IF(SIG(KNS) .LT. 0.D0) THEN

       ISTEADY = 1
       NSET = 1

C  NOTE THAT ISTEADY = 1 TELLS THE PROGRAM BELOW TO PROCEED AS IF THE
C  DOSE TIME IS 0, AND START INTEGRATING THROUGH THE SET OF 100 
C  DOSE SETS, ALL OF WHICH OCCUR BEFORE THE NEXT OBSERVATION TIME ...
C  BUT PAUSE AFTER THE END OF THE 5TH DOSE SET (NSET IS THE RUNNING NO.
C  OF THE CURRENT DOSE SETS THAT HAVE BEEN RUN) AND CALL SUBROUTINE
C  PREDLAST3 TO PREDICT THE STEADY STATE COMPARTMENT AMOUNTS AFTER THE

C  100 DOSE SETS (NOTE THAT THE COMPARTMENT AMOUNTS WILL HAVE TO BE
C  STORED AT THE END OF EACH OF THE STEADY STATE DOSE SETS AS THE LOGIC
C  OF PREDLAST3 REQUIRES). 


C  IF "CONVERGENCE" IS ACHIEVED AT THAT POINT, ASSIGN THE COMPARTMENT 
C  AMOUNTS TO BE THE PREDICTED AMOUNTS, AND ASSIGN KNS TO BE WHAT IT IS
C  WHEN THESE STEADY STATE DOSE SETS HAVE FINISHED. NOTE THAT THE END OF
C  THE 100TH DOSE SET WILL BE AT TIME 100*(-SIG(KNS)), SO KNS WILL BE 
C  THE INDEX OF THE FIRST DOSE EVENT WHICH OCCURS AFTER THIS TIME.

C  IF "CONVERGENCE" IS NOT ACHIEVED, CONTINUE APPLYING THE LOGIC OF
C  PREDLAST3 UNTIL IT IS ACHIEVED, OR UNTIL THE 100 DOSE SETS ARE ALL
C  INTEGRATED THROUGH, WHICHEVER COMES FIRST.

       DOSEINT = -SIG(KNS)

C  RESET SIG(KNS) TO BE 0 SINCE THIS DOSE EVENT REPRESENTS THE START
C  OF 100 DOSE SETS THAT BEGIN AT TIME 0.

       SIG(KNS) = 0

      ENDIF

C  THE ABOVE ENDIF IS FOR THE  IF(SIG(KNS) .LT. 0.D0)  CONDITION.



	ENDIF

C  THE ABOVE ENDIF IS FOR THE 
C   IF(TIM(KNT) .EQ. 0.D0 .AND. KNT .GT. 1)  CONDITION.



      IF(TIM(KNT) .NE. SIG(KNS)) GO TO 20
      ID=2
      TOUT=TIM(KNT)
      KNT=KNT+1
      KNS=KNS+1

      IF(N .EQ. 0) GO TO 31
      GO TO 30

20    IF(TIM(KNT) .GT. SIG(KNS) .AND. SIG(KNS) .GT. 0) GO TO 25


15    ID=0
      TOUT=TIM(KNT)
      KNT=KNT+1
      IF(N .EQ. 0) GO TO 31
      GO TO 30

25    ID=1
      TOUT=SIG(KNS)
      KNS=KNS+1
      IF(N .EQ. 0) GO TO 31

30      CONTINUE
32      IF(N .NE. -1) CALL USERANAL(X,T,TOUT)
        IF(N .EQ. -1) CALL ANAL3(X,T,TOUT)



C  IF ISTEADY = 1, THIS IS INSIDE A STEADY STATE DOSE SET. CHECK TO SEE
C  IF TOUT IS A MULTIPLE OF DOSEINT. IF SO, RECORD THE COMPARTMENT
C  AMOUNTS. THEN, AFTER COMPARTMENT AMOUNTS HAVE BEEN STORED FOR AT 
C  LEAST THE 1ST 5 MULTIPLES OF DOSEINT, STOP AND CALL SUBROUTINE
C  PREDLAST3 WHICH PREDICTS THE FINAL (STEADY STATE) COMP. AMOUNTS
C  AFTER THE LAST (100TH) DOSE SET. 

C  IF PREDLAST3 HAS PREDICTED VALUES WHICH "CONVERGE", ASSIGN THE
C  PREDICTED VALUES TO X, INCREASE KNS TO BE THE INDEX OF THE FIRST
C  DOSE EVENT WHICH OCCURS AFTER THE STEADY STATE DOSE SET ENDS AND
C  CONTINUE.

C  IF PREDLAST3 VALUES DON'T CONVERGE, CONTINUE THE PROCESS WITH 
C  COMPARTMENT AMOUNTS FOR MULTIPLES 2 - 6 OF DOSEINT, TEST FOR
C  "CONVERGENCE", ETC. THIS PROCESS CONTINUES UNTIL "CONVERGENCE" IS
C  ACHIEVED FOR A SET OF 5 COMPARTMENT AMOUNTS (OR SETS OF AMOUNTS IF
C  NDRUG IS > 1), OR UNTIL ALL 100 DOSE SETS IN THE STEADY STATE 
C  REGIMEN HAVE FINISHED. 

      IF(ISTEADY .EQ. 1) THEN


C  THE NEXT DOSE SET END TIME IS DOSEINT*NSET. IF TOUT = DOSEINT*NSET,
C  STORE THE COMPARTMENT AMOUNTS. IF NSET .GE. 5, CALL PREDLAST3 AND
C  PROCEED AS INDICATED ABOVE.

       CALL THESAME(TOUT,DOSEINT*NSET,ISAME)

       IF(ISAME .EQ. 1) THEN

        NN = N
        IF(N .EQ. -1) NN = 3

        DO J = 1,NN
         XSTORE(NSET,J) = X(J)
        END DO


        IF(NSET .GE. 5) THEN

         CALL PREDLAST3(NN,NSET,XSTORE,XPRED,ICONV)

  
         IF(ICONV .EQ. 1) THEN

C  SINCE THE PREDICTED VALUES ARE CONSIDERED ACCURATE (I.E., 
C  "CONVERGENCE WAS ACHIEVED IN PREDLAST), RESET ISTEADY TO 0,
C  WHICH MEANS THAT THE STEADY STATE DOSES ARE FINISHED; ASSIGN THE
C  COMPARTMENT AMOUNTS TO BE THE PREDICTED VALUES; AND SET KNS TO THE
C  FIRST DOSE EVENT AFTER THE END OF THE STEADY STATE DOSE SET. ALSO,
C  SET T = THE ENDING TIME OF THE STEADY STATE DOSE SET = 100*DOSEINT,
C  SINCE THAT IS WHAT IT WOULD HAVE BEEN HAD ALL 100 DOSE SETS BEEN
C  RUN.

          ISTEADY = 0

          DO J = 1,NN
           X(J) = XPRED(J)
          END DO

          T = 100.D0*DOSEINT


C  ADVANCE KNS TO BE THE FIRST DOSE PAST THE 100 DOSE SETS IN THIS
C  STEADY STATE SET. NOTE THAT THIS SET ENDS BEFORE 100*DOSEINT, SO
C  FIND THE FIRST SIG(.) THAT IS .GE. 100*DOSEINT, OR THAT IS = 0
C  (WHICH SIGNIFIES A TIME RESET) OR THAT IS < 0 (WHICH SIGNIFIES 
C  ANOTHER STEADY STATE SET).

          DO I = KNS,ND
           IF(SIG(I) .GE. 100.D0*DOSEINT .OR. SIG(I) .LE. 0.D0) THEN
            KNSNEW = I
            GO TO 100

           ENDIF
          END DO

C  TO GET HERE MEANS THAT THERE ARE NO DOSE TIMES PAST THE END OF THIS
C  STEADY STATE DOSE SET. IN THIS CASE, SET KNS TO ND+1.

          KNS = ND+1
          GO TO 200

  100     KNS = KNSNEW
  200     CONTINUE


C  SET ISKIPBOL = 1 WHENEVER CONVERGENCE OCCURS IN
C  THE STEADY STATE DOSES SINCE IN THIS CASE, WE DON'T WANT TO
C  REAPPLY THE LAST BOLUS FROM THE STEADY STATE SET BELOW LABEL 83.

          ISKIPBOL = 1

         ENDIF

C  THE ABOVE ENDIF IS FOR THE  IF(ICONV .EQ. 1)  CONDITION.

C  IF ICONV = 0, ISTEADY IS STILL = 1, 
C  WHICH MEANS THAT THE ATTEMPT TO PREDICT THE FINAL (STEADY STATE)
C  COMPARTMENT AMOUNTS CONTINUES.
          
        ENDIF
      
C  THE ABOVE ENDIF IS FOR THE  IF(NSET .GE. 5)  CONDITION.

C  SINCE ISAME = 1, THE END OF THE SET NO. NSET HAS OCCURRED -->
C  INCREASE NSET BY 1.


        NSET = NSET + 1

       ENDIF

C  THE ABOVE ENDIF IS FOR THE  IF(ISAME .EQ. 1)  CONDITION.

      ENDIF

C  THE ABOVE ENDIF IS FOR THE  IF(ISTEADY .EQ. 1)  CONDITION.



31      CONTINUE

C  RECORD OBSERVATION AND SUPPLY NEW DOSE

        IF(ID .EQ. 1) GO TO 35
        KNTM1=KNT-1

C  NOTE THAT THE TIME AT WHICH THE OUTPUT IS DESIRED IS TIM(KNTM1); THIS
C  IS CLEAR SINCE THE RETURNING VALUE(S) IN YT ARE PUT INTO ROW NO.
C  KNTM1 OF Y.

        CALL OUTPUT(TIM(KNTM1),YT)

        DO 2010 I=1,NOS
2010    Y(KNTM1,I)=YT(I)

55      IF(ID.EQ.0) GO TO 40

  35    CONTINUE

        IF(NI .EQ. 0) GO TO 83 
     
        DO I=1,NI
         R(I)=RS(KNS-1,I)
        END DO

C  AS OF idm1x13.f: MUST CALL GETFA BEFORE EVERY TIME THAT
C  FA(.) ARE USED IN CASE THE EQUATION(S) FOR THE FA(.) ARE BASED
C  ON THE COVARIATES, WHICH CAN CHANGE DOSE TO DOSE.


	 CALL GETFA(FA)


83      IF(NDRUG .EQ. 0 .OR. N .EQ. 0) GO TO 82

C  ADDING N .EQ. 0 TO ABOVE IF STATEMENT SHOWS CLEARLY THAT IF
C  N = 0 (IN WHICH CASE ANALYTIC SOLUTIONS ARE CODED DIRECTLY INTO
C  SUBROUTINE OUTPUT, WHICH MAKES THE COMPARTMENT AMOUNTS IRRELEVANT)
C  SETTING VALUES FOR THE COMPARTMENTS, X, IS UNNECESSARY.


C  IF ISKIPBOL = 1, DO NOT APPLY BOLUSES FROM DOSE KNS-1, SINCE THESE
C  BOLUSES WERE PART OF THE STEADY STATE DOSE SET WHICH ALREADY HAD
C  BOLUSES (EFFECTIVELY) APPLIED ABOVE WHERE "CONVERGENCE" OF THE
C  STEADY STATE DOSE SET WAS OBTAINED.

        IF(ISKIPBOL .EQ. 0) THEN
         DO I=1,NDRUG
          X(NBCOMP(I))=X(NBCOMP(I))+BS(KNS-1,I)*FA(I)
         END DO
        ENDIF

C  RESET ISKIPBOL = 0 HERE. IF IT IS NOW = 1, IT MEANS THAT
C  THE ABOVE APPLICATION OF BOLUSES WAS SKIPPED SINCE THERE HAS JUST
C  BEEN A STEADY STATE SET OF DOSES WHICH CONVERGED (AND WE DON'T
C  WANT THE LAST BOLUS DOSE REAPPLIED). BUT, GOING FORWARD, ISKIPBOL
C  SHOULD BE SET AGAIN TO 0 SO THE ABOVE APPLICATION OF BOLUSES WILL
C  OCCUR WHENEVER THERE IS A NEW BOLUS TO BE APPLIED.

      ISKIPBOL = 0


82      CONTINUE

C  CHECK STOPPING TIME.


40     IF(KNT .LE. M) GO TO 45

C  ESTABLISH PRED(I,J), I=1,M; J=1,NOS.


      DO J=1,NOS
       DO I=1,M
        PRED(I,J) = Y(I,J)
       END DO
      END DO

C  AS OF idm1x9.f, RESTORE THE VALUES FOR ND, SIG, AND RS, IN CASE
C  THIS MODEL HAS TIME LAGS OR STEADY STATE DOSES - TO BE READY FOR THE
C  NEXT CALL TO THIS ROUTINE.

       ND = NDO
       DO I=1,ND
        SIG(I) = SIGO(I)
        DO J=1,NI
         RS(I,J) = RSO(I,J)
        END DO
       END DO

C  ESTABLISH THE VALUES IN EACH DRUG'S PO COLUMN TO THE CORRESPONDING
C  COLUMN IN ARRAY BS.

      DO I=1,ND
       DO J=1,NDRUG
        BS(I,J)=RS(I,2*J)
       END DO
      END DO

      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	SUBROUTINE MAKEVEC(NVAR,NOFIX,IRAN,X,VALFIX,PX)
	IMPLICIT REAL*8(A-H,O-Z)
	DIMENSION IRAN(32),X(30),VALFIX(20),PX(32)
 
C  THIS ROUTINE, CALLED BY MAIN, INPUTS NVAR, NOFIX, IRAN, X, AND
C  VALFIX, AND RETURNS PX(I) = A COMBINATION OF THE VALUES IN X AND
C  VALFIX IN THE PROPER ORDER (AS DETERMINED BY IRAN).
 
	NNNVAR=0
	NNNFIX=0
 
	DO I=1,NVAR+NOFIX
 
	IF(IRAN(I) .EQ. 1) THEN
	 NNNVAR=NNNVAR+1
	 PX(I) = X(NNNVAR)
	ENDIF
 
	IF(IRAN(I) .EQ. 0) THEN
	 NNNFIX=NNNFIX+1
	 PX(I) = VALFIX(NNNFIX)
	ENDIF
 
	END DO
 
	RETURN
	END

